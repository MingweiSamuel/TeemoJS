{
  "openapi": "3.0.0",
  "info": {
    "title": "Riot API",
    "description": "\nOpenAPI/Swagger version of the [Riot API](https://developer.riotgames.com/). Automatically generated daily.\n## OpenAPI Spec File\nThe following versions of the Riot API spec file are available:\n- `openapi-3.0.0.json` ([view file](../openapi-3.0.0.json), [ui select](?url=../openapi-3.0.0.json))\n- `openapi-3.0.0.min.json` ([view file](../openapi-3.0.0.min.json), [ui select](?url=../openapi-3.0.0.min.json))\n- `openapi-3.0.0.yml` ([view file](../openapi-3.0.0.yml), [ui select](?url=../openapi-3.0.0.yml))\n- `openapi-3.0.0.min.yml` ([view file](../openapi-3.0.0.min.yml), [ui select](?url=../openapi-3.0.0.min.yml))\n- `swaggerspec-2.0.json` ([view file](../swaggerspec-2.0.json), [ui select](?url=../swaggerspec-2.0.json))\n- `swaggerspec-2.0.min.json` ([view file](../swaggerspec-2.0.min.json), [ui select](?url=../swaggerspec-2.0.min.json))\n- `swaggerspec-2.0.yml` ([view file](../swaggerspec-2.0.yml), [ui select](?url=../swaggerspec-2.0.yml))\n- `swaggerspec-2.0.min.yml` ([view file](../swaggerspec-2.0.min.yml), [ui select](?url=../swaggerspec-2.0.min.yml))\n## Other Files\n- Missing DTOs: [`missing.json`](../missing.json)\n- Routes Table: [`routesTable.json`](../routesTable.json)\n- [Enum Files](../enums/)\n## Source Code\nSource code on [GitHub](https://github.com/MingweiSamuel/riotapi-schema). Pull requests welcome!\n## Automatically Generated\nRebuilt on [Travis CI](https://travis-ci.com/MingweiSamuel/riotapi-schema/builds) daily.\n***\n",
    "termsOfService": "https://developer.riotgames.com/terms",
    "version": "50e0dd62c27c4cbb1b353fc311529f937c279806",
    "x-hash": "50e0dd62c27c4cbb1b353fc311529f937c27980664700fbe34607bae21cd699af3b03b8754d21972",
    "x-enumsHash": "64700fbe34607bae21cd699af3b03b8754d21972"
  },
  "servers": [
    {
      "url": "https://{platform}.api.riotgames.com",
      "variables": {
        "platform": {
          "enum": [
            "americas",
            "asia",
            "esports",
            "europe",
            "br1",
            "eun1",
            "euw1",
            "jp1",
            "kr",
            "la1",
            "la2",
            "na1",
            "oc1",
            "ph2",
            "ru",
            "sg2",
            "th2",
            "tr1",
            "tw2",
            "vn2",
            "pbe1",
            "sea",
            "apac",
            "ap",
            "br",
            "eu",
            "latam",
            "na"
          ],
          "default": "americas"
        }
      }
    }
  ],
  "paths": {
    "/riot/account/v1/accounts/by-puuid/{puuid}": {
      "get": {
        "tags": [
          "account-v1"
        ],
        "summary": "Get account by puuid",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#account-v1/GET_getByPuuid"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account-v1.AccountDto",
                  "x-type": "AccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "account-v1.getByPuuid",
        "description": "Get account by puuid",
        "parameters": [
          {
            "name": "puuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "account-v1",
        "x-platforms-available": [
          "americas",
          "asia",
          "esports",
          "europe"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "account-v1",
      "x-platforms-available": [
        "americas",
        "asia",
        "esports",
        "europe"
      ],
      "x-route-enum": "regional"
    },
    "/riot/account/v1/accounts/by-riot-id/{gameName}/{tagLine}": {
      "get": {
        "tags": [
          "account-v1"
        ],
        "summary": "Get account by riot id",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#account-v1/GET_getByRiotId"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account-v1.AccountDto",
                  "x-type": "AccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "account-v1.getByRiotId",
        "x-nullable-404": true,
        "description": "Get account by riot id",
        "parameters": [
          {
            "name": "tagLine",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "When querying for a player by their riot id, the gameName and tagLine query params are required."
          },
          {
            "name": "gameName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "When querying for a player by their riot id, the gameName and tagLine query params are required."
          }
        ],
        "x-endpoint": "account-v1",
        "x-platforms-available": [
          "americas",
          "asia",
          "esports",
          "europe"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "account-v1",
      "x-platforms-available": [
        "americas",
        "asia",
        "esports",
        "europe"
      ],
      "x-route-enum": "regional"
    },
    "/riot/account/v1/accounts/me": {
      "get": {
        "tags": [
          "account-v1"
        ],
        "summary": "Get account by access token",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#account-v1/GET_getByAccessToken"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account-v1.AccountDto",
                  "x-type": "AccountDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "account-v1.getByAccessToken",
        "description": "Get account by access token",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "account-v1",
        "x-platforms-available": [
          "americas",
          "asia",
          "esports",
          "europe"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "account-v1",
      "x-platforms-available": [
        "americas",
        "asia",
        "esports",
        "europe"
      ],
      "x-route-enum": "regional"
    },
    "/riot/account/v1/active-shards/by-game/{game}/by-puuid/{puuid}": {
      "get": {
        "tags": [
          "account-v1"
        ],
        "summary": "Get active shard for a player",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#account-v1/GET_getActiveShard"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/account-v1.ActiveShardDto",
                  "x-type": "ActiveShardDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "account-v1.getActiveShard",
        "x-nullable-404": true,
        "description": "Get active shard for a player",
        "parameters": [
          {
            "name": "game",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "val",
                "lor"
              ]
            }
          },
          {
            "name": "puuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "account-v1",
        "x-platforms-available": [
          "americas",
          "asia",
          "esports",
          "europe"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "account-v1",
      "x-platforms-available": [
        "americas",
        "asia",
        "esports",
        "europe"
      ],
      "x-route-enum": "regional"
    },
    "/lol/champion-mastery/v4/champion-masteries/by-puuid/{encryptedPUUID}": {
      "get": {
        "tags": [
          "champion-mastery-v4"
        ],
        "summary": "Get all champion mastery entries sorted by number of champion points descending.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#champion-mastery-v4/GET_getAllChampionMasteriesByPUUID"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/champion-mastery-v4.ChampionMasteryDto",
                    "x-type": "ChampionMasteryDto"
                  },
                  "x-type": "List[ChampionMasteryDto]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "champion-mastery-v4.getAllChampionMasteriesByPUUID",
        "description": "Get all champion mastery entries sorted by number of champion points descending.",
        "parameters": [
          {
            "name": "encryptedPUUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "champion-mastery-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "champion-mastery-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/champion-mastery/v4/champion-masteries/by-puuid/{encryptedPUUID}/by-champion/{championId}": {
      "get": {
        "tags": [
          "champion-mastery-v4"
        ],
        "summary": "Get a champion mastery by puuid and champion ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#champion-mastery-v4/GET_getChampionMasteryByPUUID"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/champion-mastery-v4.ChampionMasteryDto",
                  "x-type": "ChampionMasteryDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "champion-mastery-v4.getChampionMasteryByPUUID",
        "description": "Get a champion mastery by puuid and champion ID.",
        "parameters": [
          {
            "name": "encryptedPUUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          },
          {
            "name": "championId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "integer",
              "x-enum": "champion"
            },
            "description": "Champion ID to retrieve Champion Mastery."
          }
        ],
        "x-endpoint": "champion-mastery-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "champion-mastery-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/champion-mastery/v4/champion-masteries/by-puuid/{encryptedPUUID}/top": {
      "get": {
        "tags": [
          "champion-mastery-v4"
        ],
        "summary": "Get specified number of top champion mastery entries sorted by number of champion points descending.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#champion-mastery-v4/GET_getTopChampionMasteriesByPUUID"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/champion-mastery-v4.ChampionMasteryDto",
                    "x-type": "ChampionMasteryDto"
                  },
                  "x-type": "List[ChampionMasteryDto]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "champion-mastery-v4.getTopChampionMasteriesByPUUID",
        "description": "Get specified number of top champion mastery entries sorted by number of champion points descending.",
        "parameters": [
          {
            "name": "encryptedPUUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "Number of entries to retrieve, defaults to 3."
          }
        ],
        "x-endpoint": "champion-mastery-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "champion-mastery-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/champion-mastery/v4/scores/by-puuid/{encryptedPUUID}": {
      "get": {
        "tags": [
          "champion-mastery-v4"
        ],
        "summary": "Get a player's total champion mastery score, which is the sum of individual champion mastery levels.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#champion-mastery-v4/GET_getChampionMasteryScoreByPUUID"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "x-type": "int"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "champion-mastery-v4.getChampionMasteryScoreByPUUID",
        "description": "Get a player's total champion mastery score, which is the sum of individual champion mastery levels.",
        "parameters": [
          {
            "name": "encryptedPUUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "champion-mastery-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "champion-mastery-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/platform/v3/champion-rotations": {
      "get": {
        "tags": [
          "champion-v3"
        ],
        "summary": "Returns champion rotations, including free-to-play and low-level free-to-play rotations (REST)",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#champion-v3/GET_getChampionInfo"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/champion-v3.ChampionInfo",
                  "x-type": "ChampionInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "champion-v3.getChampionInfo",
        "description": "Returns champion rotations, including free-to-play and low-level free-to-play rotations (REST)",
        "x-endpoint": "champion-v3",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "champion-v3",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/clash/v1/players/by-summoner/{summonerId}": {
      "get": {
        "tags": [
          "clash-v1"
        ],
        "summary": "Get players by summoner ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#clash-v1/GET_getPlayersBySummoner"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/clash-v1.PlayerDto",
                    "x-type": "PlayerDto"
                  },
                  "x-type": "List[PlayerDto]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "clash-v1.getPlayersBySummoner",
        "description": "Get players by summoner ID.\n## Implementation Notes\nThis endpoint returns a list of active Clash players for a given summoner ID. If a summoner registers for multiple tournaments at the same time (e.g., Saturday and Sunday) then both registrations would appear in this list.",
        "parameters": [
          {
            "name": "summonerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "clash-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "clash-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/clash/v1/teams/{teamId}": {
      "get": {
        "tags": [
          "clash-v1"
        ],
        "summary": "Get team by ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#clash-v1/GET_getTeamById"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clash-v1.TeamDto",
                  "x-type": "TeamDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "clash-v1.getTeamById",
        "x-nullable-404": true,
        "description": "Get team by ID.",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "clash-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "clash-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/clash/v1/tournaments": {
      "get": {
        "tags": [
          "clash-v1"
        ],
        "summary": "Get all active or upcoming tournaments.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#clash-v1/GET_getTournaments"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/clash-v1.TournamentDto",
                    "x-type": "TournamentDto"
                  },
                  "x-type": "List[TournamentDto]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "clash-v1.getTournaments",
        "description": "Get all active or upcoming tournaments.",
        "x-endpoint": "clash-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "clash-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/clash/v1/tournaments/by-team/{teamId}": {
      "get": {
        "tags": [
          "clash-v1"
        ],
        "summary": "Get tournament by team ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#clash-v1/GET_getTournamentByTeam"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clash-v1.TournamentDto",
                  "x-type": "TournamentDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "clash-v1.getTournamentByTeam",
        "x-nullable-404": true,
        "description": "Get tournament by team ID.",
        "parameters": [
          {
            "name": "teamId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "clash-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "clash-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/clash/v1/tournaments/{tournamentId}": {
      "get": {
        "tags": [
          "clash-v1"
        ],
        "summary": "Get tournament by ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#clash-v1/GET_getTournamentById"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/clash-v1.TournamentDto",
                  "x-type": "TournamentDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "clash-v1.getTournamentById",
        "x-nullable-404": true,
        "description": "Get tournament by ID.",
        "parameters": [
          {
            "name": "tournamentId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            }
          }
        ],
        "x-endpoint": "clash-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "clash-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/league-exp/v4/entries/{queue}/{tier}/{division}": {
      "get": {
        "tags": [
          "league-exp-v4"
        ],
        "summary": "Get all the league entries.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#league-exp-v4/GET_getLeagueEntries"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/league-exp-v4.LeagueEntryDTO",
                    "x-type": "LeagueEntryDTO"
                  },
                  "x-type": "Set[LeagueEntryDTO]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "league-exp-v4.getLeagueEntries",
        "description": "Get all the league entries.",
        "parameters": [
          {
            "name": "queue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "queueType",
              "enum": [
                "RANKED_SOLO_5x5",
                "RANKED_TFT",
                "RANKED_FLEX_SR",
                "RANKED_FLEX_TT"
              ]
            },
            "description": "Note that the queue value must be a valid ranked queue."
          },
          {
            "name": "tier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "tier",
              "enum": [
                "CHALLENGER",
                "GRANDMASTER",
                "MASTER",
                "DIAMOND",
                "EMERALD",
                "PLATINUM",
                "GOLD",
                "SILVER",
                "BRONZE",
                "IRON"
              ]
            }
          },
          {
            "name": "division",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "division",
              "enum": [
                "I",
                "II",
                "III",
                "IV"
              ]
            }
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "Defaults to 1. Starts with page 1."
          }
        ],
        "x-endpoint": "league-exp-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "league-exp-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/league/v4/challengerleagues/by-queue/{queue}": {
      "get": {
        "tags": [
          "league-v4"
        ],
        "summary": "Get the challenger league for given queue.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#league-v4/GET_getChallengerLeague"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/league-v4.LeagueListDTO",
                  "x-type": "LeagueListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "league-v4.getChallengerLeague",
        "description": "Get the challenger league for given queue.",
        "parameters": [
          {
            "name": "queue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "queueType",
              "enum": [
                "RANKED_SOLO_5x5",
                "RANKED_FLEX_SR",
                "RANKED_FLEX_TT"
              ]
            }
          }
        ],
        "x-endpoint": "league-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "league-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/league/v4/entries/by-summoner/{encryptedSummonerId}": {
      "get": {
        "tags": [
          "league-v4"
        ],
        "summary": "Get league entries in all queues for a given summoner ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#league-v4/GET_getLeagueEntriesForSummoner"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/league-v4.LeagueEntryDTO",
                    "x-type": "LeagueEntryDTO"
                  },
                  "x-type": "Set[LeagueEntryDTO]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "league-v4.getLeagueEntriesForSummoner",
        "description": "Get league entries in all queues for a given summoner ID.",
        "parameters": [
          {
            "name": "encryptedSummonerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "league-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "league-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/league/v4/entries/{queue}/{tier}/{division}": {
      "get": {
        "tags": [
          "league-v4"
        ],
        "summary": "Get all the league entries.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#league-v4/GET_getLeagueEntries"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/league-v4.LeagueEntryDTO",
                    "x-type": "LeagueEntryDTO"
                  },
                  "x-type": "Set[LeagueEntryDTO]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "league-v4.getLeagueEntries",
        "description": "Get all the league entries.",
        "parameters": [
          {
            "name": "division",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "division",
              "enum": [
                "I",
                "II",
                "III",
                "IV"
              ]
            }
          },
          {
            "name": "tier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "tier",
              "enum": [
                "DIAMOND",
                "EMERALD",
                "PLATINUM",
                "GOLD",
                "SILVER",
                "BRONZE",
                "IRON"
              ]
            }
          },
          {
            "name": "queue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "queueType",
              "enum": [
                "RANKED_SOLO_5x5",
                "RANKED_FLEX_SR",
                "RANKED_FLEX_TT"
              ]
            },
            "description": "Note that the queue value must be a valid ranked queue."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "Defaults to 1. Starts with page 1."
          }
        ],
        "x-endpoint": "league-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "league-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/league/v4/grandmasterleagues/by-queue/{queue}": {
      "get": {
        "tags": [
          "league-v4"
        ],
        "summary": "Get the grandmaster league of a specific queue.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#league-v4/GET_getGrandmasterLeague"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/league-v4.LeagueListDTO",
                  "x-type": "LeagueListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "league-v4.getGrandmasterLeague",
        "description": "Get the grandmaster league of a specific queue.",
        "parameters": [
          {
            "name": "queue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "queueType",
              "enum": [
                "RANKED_SOLO_5x5",
                "RANKED_FLEX_SR",
                "RANKED_FLEX_TT"
              ]
            }
          }
        ],
        "x-endpoint": "league-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "league-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/league/v4/leagues/{leagueId}": {
      "get": {
        "tags": [
          "league-v4"
        ],
        "summary": "Get league with given ID, including inactive entries.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#league-v4/GET_getLeagueById"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/league-v4.LeagueListDTO",
                  "x-type": "LeagueListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "league-v4.getLeagueById",
        "x-nullable-404": true,
        "description": "Get league with given ID, including inactive entries.",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "The UUID of the league."
          }
        ],
        "x-endpoint": "league-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "league-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/league/v4/masterleagues/by-queue/{queue}": {
      "get": {
        "tags": [
          "league-v4"
        ],
        "summary": "Get the master league for given queue.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#league-v4/GET_getMasterLeague"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/league-v4.LeagueListDTO",
                  "x-type": "LeagueListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "league-v4.getMasterLeague",
        "description": "Get the master league for given queue.",
        "parameters": [
          {
            "name": "queue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "queueType",
              "enum": [
                "RANKED_SOLO_5x5",
                "RANKED_FLEX_SR",
                "RANKED_FLEX_TT"
              ]
            }
          }
        ],
        "x-endpoint": "league-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "league-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/challenges/v1/challenges/config": {
      "get": {
        "tags": [
          "lol-challenges-v1"
        ],
        "summary": "List of all basic challenge configuration information (includes all translations for names and descriptions)",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lol-challenges-v1/GET_getAllChallengeConfigs"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/lol-challenges-v1.ChallengeConfigInfoDto",
                    "x-type": "ChallengeConfigInfoDto"
                  },
                  "x-type": "List[ChallengeConfigInfoDto]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lol-challenges-v1.getAllChallengeConfigs",
        "description": "List of all basic challenge configuration information (includes all translations for names and descriptions)",
        "x-endpoint": "lol-challenges-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "pbe1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "lol-challenges-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "pbe1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/challenges/v1/challenges/percentiles": {
      "get": {
        "tags": [
          "lol-challenges-v1"
        ],
        "summary": "Map of level to percentile of players who have achieved it - keys: ChallengeId -> Season -> Level -> percentile of players who achieved it",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lol-challenges-v1/GET_getAllChallengePercentiles"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "x-type": "Map[Long, Map[Level, Double]]",
                  "type": "object",
                  "x-key": {
                    "x-type": "long",
                    "type": "integer",
                    "format": "int64"
                  },
                  "additionalProperties": {
                    "x-type": "Map[Level, Double]",
                    "type": "object",
                    "x-key": {
                      "type": "string",
                      "x-type": "string",
                      "x-enum": "tier"
                    },
                    "additionalProperties": {
                      "type": "number",
                      "format": "double",
                      "x-type": "double"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lol-challenges-v1.getAllChallengePercentiles",
        "description": "Map of level to percentile of players who have achieved it - keys: ChallengeId -> Season -> Level -> percentile of players who achieved it",
        "x-endpoint": "lol-challenges-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "pbe1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "lol-challenges-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "pbe1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/challenges/v1/challenges/{challengeId}/config": {
      "get": {
        "tags": [
          "lol-challenges-v1"
        ],
        "summary": "Get challenge configuration (REST)",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lol-challenges-v1/GET_getChallengeConfigs"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lol-challenges-v1.ChallengeConfigInfoDto",
                  "x-type": "ChallengeConfigInfoDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lol-challenges-v1.getChallengeConfigs",
        "x-nullable-404": true,
        "description": "Get challenge configuration (REST)",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            }
          }
        ],
        "x-endpoint": "lol-challenges-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "pbe1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "lol-challenges-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "pbe1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/challenges/v1/challenges/{challengeId}/leaderboards/by-level/{level}": {
      "get": {
        "tags": [
          "lol-challenges-v1"
        ],
        "summary": "Return top players for each level. Level must be MASTER, GRANDMASTER or CHALLENGER.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lol-challenges-v1/GET_getChallengeLeaderboards"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/lol-challenges-v1.ApexPlayerInfoDto",
                    "x-type": "ApexPlayerInfoDto"
                  },
                  "x-type": "List[ApexPlayerInfoDto]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lol-challenges-v1.getChallengeLeaderboards",
        "x-nullable-404": true,
        "description": "Return top players for each level. Level must be MASTER, GRANDMASTER or CHALLENGER.",
        "parameters": [
          {
            "name": "level",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "tier",
              "enum": [
                "NONE",
                "IRON",
                "BRONZE",
                "SILVER",
                "GOLD",
                "PLATINUM",
                "DIAMOND",
                "MASTER",
                "GRANDMASTER",
                "CHALLENGER",
                "HIGHEST_NOT_LEADERBOARD_ONLY",
                "HIGHEST",
                "LOWEST"
              ]
            }
          },
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            }
          },
          {
            "name": "limit",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            }
          }
        ],
        "x-endpoint": "lol-challenges-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "pbe1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "lol-challenges-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "pbe1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/challenges/v1/challenges/{challengeId}/percentiles": {
      "get": {
        "tags": [
          "lol-challenges-v1"
        ],
        "summary": "Map of level to percentile of players who have achieved it",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lol-challenges-v1/GET_getChallengePercentiles"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "x-type": "Map[Level, Double]",
                  "type": "object",
                  "x-key": {
                    "type": "string",
                    "x-type": "string",
                    "x-enum": "tier"
                  },
                  "additionalProperties": {
                    "type": "number",
                    "format": "double",
                    "x-type": "double"
                  }
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lol-challenges-v1.getChallengePercentiles",
        "x-nullable-404": true,
        "description": "Map of level to percentile of players who have achieved it",
        "parameters": [
          {
            "name": "challengeId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            }
          }
        ],
        "x-endpoint": "lol-challenges-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "pbe1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "lol-challenges-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "pbe1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/challenges/v1/player-data/{puuid}": {
      "get": {
        "tags": [
          "lol-challenges-v1"
        ],
        "summary": "Returns player information with list of all progressed challenges (REST)",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lol-challenges-v1/GET_getPlayerData"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lol-challenges-v1.PlayerInfoDto",
                  "x-type": "PlayerInfoDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lol-challenges-v1.getPlayerData",
        "description": "Returns player information with list of all progressed challenges (REST)",
        "parameters": [
          {
            "name": "puuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "lol-challenges-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "pbe1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "lol-challenges-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "pbe1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/status/v4/platform-data": {
      "get": {
        "tags": [
          "lol-status-v4"
        ],
        "summary": "Get League of Legends status for the given platform.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lol-status-v4/GET_getPlatformData"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lol-status-v4.PlatformDataDto",
                  "x-type": "PlatformDataDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lol-status-v4.getPlatformData",
        "description": "Get League of Legends status for the given platform.",
        "x-endpoint": "lol-status-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "pbe1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "lol-status-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "pbe1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lor/deck/v1/decks/me": {
      "get": {
        "tags": [
          "lor-deck-v1"
        ],
        "summary": "Get a list of the calling user's decks.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lor-deck-v1/GET_getDecks"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/lor-deck-v1.DeckDto",
                    "x-type": "DeckDto"
                  },
                  "x-type": "List[DeckDto]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lor-deck-v1.getDecks",
        "description": "Get a list of the calling user's decks.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          }
        ],
        "x-endpoint": "lor-deck-v1",
        "x-platforms-available": [
          "americas",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "lor-deck-v1",
      "x-platforms-available": [
        "americas",
        "europe",
        "sea"
      ],
      "x-route-enum": "regional",
      "post": {
        "tags": [
          "lor-deck-v1"
        ],
        "summary": "Create a new deck for the calling user.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lor-deck-v1/POST_createDeck"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "x-type": "String"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lor-deck-v1.createDeck",
        "description": "Create a new deck for the calling user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/lor-deck-v1.NewDeckDto",
                "x-type": "NewDeckDto"
              }
            }
          },
          "required": true
        },
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          }
        ],
        "x-endpoint": "lor-deck-v1",
        "x-platforms-available": [
          "americas",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      }
    },
    "/lor/inventory/v1/cards/me": {
      "get": {
        "tags": [
          "lor-inventory-v1"
        ],
        "summary": "Return a list of cards owned by the calling user.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lor-inventory-v1/GET_getCards"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/lor-inventory-v1.CardDto",
                    "x-type": "CardDto"
                  },
                  "x-type": "List[CardDto]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lor-inventory-v1.getCards",
        "description": "Return a list of cards owned by the calling user.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          }
        ],
        "x-endpoint": "lor-inventory-v1",
        "x-platforms-available": [
          "americas",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "lor-inventory-v1",
      "x-platforms-available": [
        "americas",
        "europe",
        "sea"
      ],
      "x-route-enum": "regional"
    },
    "/lor/match/v1/matches/by-puuid/{puuid}/ids": {
      "get": {
        "tags": [
          "lor-match-v1"
        ],
        "summary": "Get a list of match ids by PUUID",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lor-match-v1/GET_getMatchIdsByPUUID"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-type": "string"
                  },
                  "x-type": "List[string]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lor-match-v1.getMatchIdsByPUUID",
        "description": "Get a list of match ids by PUUID",
        "parameters": [
          {
            "name": "puuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          }
        ],
        "x-endpoint": "lor-match-v1",
        "x-platforms-available": [
          "americas",
          "apac",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "lor-match-v1",
      "x-platforms-available": [
        "americas",
        "apac",
        "europe",
        "sea"
      ],
      "x-route-enum": "regional"
    },
    "/lor/match/v1/matches/{matchId}": {
      "get": {
        "tags": [
          "lor-match-v1"
        ],
        "summary": "Get match by id",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lor-match-v1/GET_getMatch"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lor-match-v1.MatchDto",
                  "x-type": "MatchDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lor-match-v1.getMatch",
        "description": "Get match by id",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          }
        ],
        "x-endpoint": "lor-match-v1",
        "x-platforms-available": [
          "americas",
          "apac",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "lor-match-v1",
      "x-platforms-available": [
        "americas",
        "apac",
        "europe",
        "sea"
      ],
      "x-route-enum": "regional"
    },
    "/lor/ranked/v1/leaderboards": {
      "get": {
        "tags": [
          "lor-ranked-v1"
        ],
        "summary": "Get the players in Master tier.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lor-ranked-v1/GET_getLeaderboards"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lor-ranked-v1.LeaderboardDto",
                  "x-type": "LeaderboardDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lor-ranked-v1.getLeaderboards",
        "description": "Get the players in Master tier.",
        "x-endpoint": "lor-ranked-v1",
        "x-platforms-available": [
          "americas",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "lor-ranked-v1",
      "x-platforms-available": [
        "americas",
        "europe",
        "sea"
      ],
      "x-route-enum": "regional"
    },
    "/lor/status/v1/platform-data": {
      "get": {
        "tags": [
          "lor-status-v1"
        ],
        "summary": "Get Legends of Runeterra status for the given platform.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#lor-status-v1/GET_getPlatformData"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/lor-status-v1.PlatformDataDto",
                  "x-type": "PlatformDataDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "lor-status-v1.getPlatformData",
        "description": "Get Legends of Runeterra status for the given platform.",
        "x-endpoint": "lor-status-v1",
        "x-platforms-available": [
          "americas",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "lor-status-v1",
      "x-platforms-available": [
        "americas",
        "europe",
        "sea"
      ],
      "x-route-enum": "regional"
    },
    "/lol/match/v5/matches/by-puuid/{puuid}/ids": {
      "get": {
        "tags": [
          "match-v5"
        ],
        "summary": "Get a list of match ids by puuid",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#match-v5/GET_getMatchIdsByPUUID"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-type": "string"
                  },
                  "x-type": "List[string]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "match-v5.getMatchIdsByPUUID",
        "description": "Get a list of match ids by puuid",
        "parameters": [
          {
            "name": "puuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            },
            "description": "Epoch timestamp in seconds. The matchlist started storing timestamps on June 16th, 2021. Any matches played before June 16th, 2021 won't be included in the results if the startTime filter is set."
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            },
            "description": "Epoch timestamp in seconds."
          },
          {
            "name": "queue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int",
              "x-enum": "queue"
            },
            "description": "Filter the list of match ids by a specific queue id. This filter is mutually inclusive of the type filter meaning any match ids returned must match both the queue and type filters."
          },
          {
            "name": "type",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "ranked",
                "normal",
                "tourney",
                "tutorial"
              ]
            },
            "description": "Filter the list of match ids by the type of match. This filter is mutually inclusive of the queue filter meaning any match ids returned must match both the queue and type filters."
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "Defaults to 0. Start index."
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "Defaults to 20. Valid values: 0 to 100. Number of match ids to return."
          }
        ],
        "x-endpoint": "match-v5",
        "x-platforms-available": [
          "americas",
          "asia",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "match-v5",
      "x-platforms-available": [
        "americas",
        "asia",
        "europe",
        "sea"
      ],
      "x-route-enum": "regional"
    },
    "/lol/match/v5/matches/{matchId}": {
      "get": {
        "tags": [
          "match-v5"
        ],
        "summary": "Get a match by match id",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#match-v5/GET_getMatch"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/match-v5.MatchDto",
                  "x-type": "MatchDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "match-v5.getMatch",
        "x-nullable-404": true,
        "description": "Get a match by match id",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          }
        ],
        "x-endpoint": "match-v5",
        "x-platforms-available": [
          "americas",
          "asia",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "match-v5",
      "x-platforms-available": [
        "americas",
        "asia",
        "europe",
        "sea"
      ],
      "x-route-enum": "regional"
    },
    "/lol/match/v5/matches/{matchId}/timeline": {
      "get": {
        "tags": [
          "match-v5"
        ],
        "summary": "Get a match timeline by match id",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#match-v5/GET_getTimeline"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/match-v5.MatchTimelineDto",
                  "x-type": "MatchTimelineDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "match-v5.getTimeline",
        "x-nullable-404": true,
        "description": "Get a match timeline by match id",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          }
        ],
        "x-endpoint": "match-v5",
        "x-platforms-available": [
          "americas",
          "asia",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "match-v5",
      "x-platforms-available": [
        "americas",
        "asia",
        "europe",
        "sea"
      ],
      "x-route-enum": "regional"
    },
    "/lol/spectator/tft/v5/active-games/by-puuid/{encryptedPUUID}": {
      "get": {
        "tags": [
          "spectator-tft-v5"
        ],
        "summary": "Get current game information for the given puuid.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#spectator-tft-v5/GET_getCurrentGameInfoByPuuid"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spectator-tft-v5.CurrentGameInfo",
                  "x-type": "CurrentGameInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "spectator-tft-v5.getCurrentGameInfoByPuuid",
        "x-nullable-404": true,
        "description": "Get current game information for the given puuid.",
        "parameters": [
          {
            "name": "encryptedPUUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "The puuid of the summoner."
          }
        ],
        "x-endpoint": "spectator-tft-v5",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "spectator-tft-v5",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/spectator/tft/v5/featured-games": {
      "get": {
        "tags": [
          "spectator-tft-v5"
        ],
        "summary": "Get list of featured games.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#spectator-tft-v5/GET_getFeaturedGames"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spectator-tft-v5.FeaturedGames",
                  "x-type": "FeaturedGames"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "spectator-tft-v5.getFeaturedGames",
        "description": "Get list of featured games.",
        "x-endpoint": "spectator-tft-v5",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "spectator-tft-v5",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/spectator/v5/active-games/by-summoner/{encryptedPUUID}": {
      "get": {
        "tags": [
          "spectator-v5"
        ],
        "summary": "Get current game information for the given puuid.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#spectator-v5/GET_getCurrentGameInfoByPuuid"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spectator-v5.CurrentGameInfo",
                  "x-type": "CurrentGameInfo"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "spectator-v5.getCurrentGameInfoByPuuid",
        "x-nullable-404": true,
        "description": "Get current game information for the given puuid.",
        "parameters": [
          {
            "name": "encryptedPUUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "The puuid of the summoner."
          }
        ],
        "x-endpoint": "spectator-v5",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "spectator-v5",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/spectator/v5/featured-games": {
      "get": {
        "tags": [
          "spectator-v5"
        ],
        "summary": "Get list of featured games.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#spectator-v5/GET_getFeaturedGames"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/spectator-v5.FeaturedGames",
                  "x-type": "FeaturedGames"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "spectator-v5.getFeaturedGames",
        "description": "Get list of featured games.",
        "x-endpoint": "spectator-v5",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "spectator-v5",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/fulfillment/v1/summoners/by-puuid/{rsoPUUID}": {
      "get": {
        "tags": [
          "summoner-v4"
        ],
        "summary": "Get a summoner by its RSO encrypted PUUID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#summoner-v4/GET_getByRSOPUUID"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/summoner-v4.SummonerDTO",
                  "x-type": "SummonerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "summoner-v4.getByRSOPUUID",
        "description": "Get a summoner by its RSO encrypted PUUID.",
        "parameters": [
          {
            "name": "rsoPUUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "Summoner ID"
          }
        ],
        "x-endpoint": "summoner-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "summoner-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/summoner/v4/summoners/by-account/{encryptedAccountId}": {
      "get": {
        "tags": [
          "summoner-v4"
        ],
        "summary": "Get a summoner by account ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#summoner-v4/GET_getByAccountId"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/summoner-v4.SummonerDTO",
                  "x-type": "SummonerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "summoner-v4.getByAccountId",
        "description": "Get a summoner by account ID.",
        "parameters": [
          {
            "name": "encryptedAccountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "summoner-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "summoner-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/summoner/v4/summoners/by-name/{summonerName}": {
      "get": {
        "tags": [
          "summoner-v4"
        ],
        "summary": "Get a summoner by summoner name.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#summoner-v4/GET_getBySummonerName"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/summoner-v4.SummonerDTO",
                  "x-type": "SummonerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "summoner-v4.getBySummonerName",
        "x-nullable-404": true,
        "description": "Get a summoner by summoner name.",
        "parameters": [
          {
            "name": "summonerName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "Summoner Name"
          }
        ],
        "deprecated": true,
        "x-endpoint": "summoner-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "summoner-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/summoner/v4/summoners/by-puuid/{encryptedPUUID}": {
      "get": {
        "tags": [
          "summoner-v4"
        ],
        "summary": "Get a summoner by PUUID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#summoner-v4/GET_getByPUUID"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/summoner-v4.SummonerDTO",
                  "x-type": "SummonerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "summoner-v4.getByPUUID",
        "description": "Get a summoner by PUUID.",
        "parameters": [
          {
            "name": "encryptedPUUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "Summoner ID"
          }
        ],
        "x-endpoint": "summoner-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "summoner-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/summoner/v4/summoners/me": {
      "get": {
        "tags": [
          "summoner-v4"
        ],
        "summary": "Get a summoner by access token.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#summoner-v4/GET_getByAccessToken"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/summoner-v4.SummonerDTO",
                  "x-type": "SummonerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "summoner-v4.getByAccessToken",
        "description": "Get a summoner by access token.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "Bearer token"
          }
        ],
        "x-endpoint": "summoner-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "summoner-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/summoner/v4/summoners/{encryptedSummonerId}": {
      "get": {
        "tags": [
          "summoner-v4"
        ],
        "summary": "Get a summoner by summoner ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#summoner-v4/GET_getBySummonerId"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/summoner-v4.SummonerDTO",
                  "x-type": "SummonerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "summoner-v4.getBySummonerId",
        "description": "Get a summoner by summoner ID.",
        "parameters": [
          {
            "name": "encryptedSummonerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "Summoner ID"
          }
        ],
        "x-endpoint": "summoner-v4",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "summoner-v4",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/league/v1/challenger": {
      "get": {
        "tags": [
          "tft-league-v1"
        ],
        "summary": "Get the challenger league.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-league-v1/GET_getChallengerLeague"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tft-league-v1.LeagueListDTO",
                  "x-type": "LeagueListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-league-v1.getChallengerLeague",
        "description": "Get the challenger league.",
        "parameters": [
          {
            "name": "queue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "RANKED_TFT",
                "RANKED_TFT_DOUBLE_UP"
              ]
            },
            "description": "Defaults to RANKED_TFT."
          }
        ],
        "x-endpoint": "tft-league-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-league-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/league/v1/entries/by-summoner/{summonerId}": {
      "get": {
        "tags": [
          "tft-league-v1"
        ],
        "summary": "Get league entries for a given summoner ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-league-v1/GET_getLeagueEntriesForSummoner"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tft-league-v1.LeagueEntryDTO",
                    "x-type": "LeagueEntryDTO"
                  },
                  "x-type": "Set[LeagueEntryDTO]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-league-v1.getLeagueEntriesForSummoner",
        "description": "Get league entries for a given summoner ID.",
        "parameters": [
          {
            "name": "summonerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "tft-league-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-league-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/league/v1/entries/{tier}/{division}": {
      "get": {
        "tags": [
          "tft-league-v1"
        ],
        "summary": "Get all the league entries.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-league-v1/GET_getLeagueEntries"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tft-league-v1.LeagueEntryDTO",
                    "x-type": "LeagueEntryDTO"
                  },
                  "x-type": "Set[LeagueEntryDTO]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-league-v1.getLeagueEntries",
        "description": "Get all the league entries.",
        "parameters": [
          {
            "name": "tier",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "tier",
              "enum": [
                "DIAMOND",
                "EMERALD",
                "PLATINUM",
                "GOLD",
                "SILVER",
                "BRONZE",
                "IRON"
              ]
            }
          },
          {
            "name": "division",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "I",
                "II",
                "III",
                "IV"
              ]
            }
          },
          {
            "name": "queue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "RANKED_TFT",
                "RANKED_TFT_DOUBLE_UP"
              ]
            },
            "description": "Defaults to RANKED_TFT."
          },
          {
            "name": "page",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "Defaults to 1. Starts with page 1."
          }
        ],
        "x-endpoint": "tft-league-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-league-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/league/v1/grandmaster": {
      "get": {
        "tags": [
          "tft-league-v1"
        ],
        "summary": "Get the grandmaster league.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-league-v1/GET_getGrandmasterLeague"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tft-league-v1.LeagueListDTO",
                  "x-type": "LeagueListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-league-v1.getGrandmasterLeague",
        "description": "Get the grandmaster league.",
        "parameters": [
          {
            "name": "queue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "RANKED_TFT",
                "RANKED_TFT_DOUBLE_UP"
              ]
            },
            "description": "Defaults to RANKED_TFT."
          }
        ],
        "x-endpoint": "tft-league-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-league-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/league/v1/leagues/{leagueId}": {
      "get": {
        "tags": [
          "tft-league-v1"
        ],
        "summary": "Get league with given ID, including inactive entries.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-league-v1/GET_getLeagueById"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tft-league-v1.LeagueListDTO",
                  "x-type": "LeagueListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-league-v1.getLeagueById",
        "x-nullable-404": true,
        "description": "Get league with given ID, including inactive entries.",
        "parameters": [
          {
            "name": "leagueId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "The UUID of the league."
          }
        ],
        "x-endpoint": "tft-league-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-league-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/league/v1/master": {
      "get": {
        "tags": [
          "tft-league-v1"
        ],
        "summary": "Get the master league.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-league-v1/GET_getMasterLeague"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tft-league-v1.LeagueListDTO",
                  "x-type": "LeagueListDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-league-v1.getMasterLeague",
        "description": "Get the master league.",
        "parameters": [
          {
            "name": "queue",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "RANKED_TFT",
                "RANKED_TFT_DOUBLE_UP"
              ]
            },
            "description": "Defaults to RANKED_TFT."
          }
        ],
        "x-endpoint": "tft-league-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-league-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/league/v1/rated-ladders/{queue}/top": {
      "get": {
        "tags": [
          "tft-league-v1"
        ],
        "summary": "Get the top rated ladder for given queue",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-league-v1/GET_getTopRatedLadder"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tft-league-v1.TopRatedLadderEntryDto",
                    "x-type": "TopRatedLadderEntryDto"
                  },
                  "x-type": "List[TopRatedLadderEntryDto]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-league-v1.getTopRatedLadder",
        "description": "Get the top rated ladder for given queue",
        "parameters": [
          {
            "name": "queue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "x-enum": "queueType",
              "enum": [
                "RANKED_TFT_TURBO"
              ]
            }
          }
        ],
        "x-endpoint": "tft-league-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-league-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/match/v1/matches/by-puuid/{puuid}/ids": {
      "get": {
        "tags": [
          "tft-match-v1"
        ],
        "summary": "Get a list of match ids by PUUID",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-match-v1/GET_getMatchIdsByPUUID"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-type": "string"
                  },
                  "x-type": "List[string]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-match-v1.getMatchIdsByPUUID",
        "description": "Get a list of match ids by PUUID",
        "parameters": [
          {
            "name": "puuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          },
          {
            "name": "start",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "Defaults to 0. Start index."
          },
          {
            "name": "endTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            },
            "description": "Epoch timestamp in seconds."
          },
          {
            "name": "startTime",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            },
            "description": "Epoch timestamp in seconds. The matchlist started storing timestamps on June 16th, 2021. Any matches played before June 16th, 2021 won't be included in the results if the startTime filter is set."
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "Defaults to 20. Number of match ids to return."
          }
        ],
        "x-endpoint": "tft-match-v1",
        "x-platforms-available": [
          "americas",
          "asia",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tft-match-v1",
      "x-platforms-available": [
        "americas",
        "asia",
        "europe",
        "sea"
      ],
      "x-route-enum": "regional"
    },
    "/tft/match/v1/matches/{matchId}": {
      "get": {
        "tags": [
          "tft-match-v1"
        ],
        "summary": "Get a match by match id",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-match-v1/GET_getMatch"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tft-match-v1.MatchDto",
                  "x-type": "MatchDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-match-v1.getMatch",
        "x-nullable-404": true,
        "description": "Get a match by match id",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          }
        ],
        "x-endpoint": "tft-match-v1",
        "x-platforms-available": [
          "americas",
          "asia",
          "europe",
          "sea"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tft-match-v1",
      "x-platforms-available": [
        "americas",
        "asia",
        "europe",
        "sea"
      ],
      "x-route-enum": "regional"
    },
    "/tft/status/v1/platform-data": {
      "get": {
        "tags": [
          "tft-status-v1"
        ],
        "summary": "Get Teamfight Tactics status for the given platform.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-status-v1/GET_getPlatformData"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tft-status-v1.PlatformDataDto",
                  "x-type": "PlatformDataDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-status-v1.getPlatformData",
        "description": "Get Teamfight Tactics status for the given platform.",
        "x-endpoint": "tft-status-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "pbe1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-status-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "pbe1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/summoner/v1/summoners/by-account/{encryptedAccountId}": {
      "get": {
        "tags": [
          "tft-summoner-v1"
        ],
        "summary": "Get a summoner by account ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-summoner-v1/GET_getByAccountId"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tft-summoner-v1.SummonerDTO",
                  "x-type": "SummonerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-summoner-v1.getByAccountId",
        "description": "Get a summoner by account ID.",
        "parameters": [
          {
            "name": "encryptedAccountId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "tft-summoner-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-summoner-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/summoner/v1/summoners/by-name/{summonerName}": {
      "get": {
        "tags": [
          "tft-summoner-v1"
        ],
        "summary": "Get a summoner by summoner name.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-summoner-v1/GET_getBySummonerName"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tft-summoner-v1.SummonerDTO",
                  "x-type": "SummonerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-summoner-v1.getBySummonerName",
        "x-nullable-404": true,
        "description": "Get a summoner by summoner name.",
        "parameters": [
          {
            "name": "summonerName",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "Summoner Name"
          }
        ],
        "deprecated": true,
        "x-endpoint": "tft-summoner-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-summoner-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/summoner/v1/summoners/by-puuid/{encryptedPUUID}": {
      "get": {
        "tags": [
          "tft-summoner-v1"
        ],
        "summary": "Get a summoner by PUUID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-summoner-v1/GET_getByPUUID"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tft-summoner-v1.SummonerDTO",
                  "x-type": "SummonerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-summoner-v1.getByPUUID",
        "description": "Get a summoner by PUUID.",
        "parameters": [
          {
            "name": "encryptedPUUID",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "Summoner ID"
          }
        ],
        "x-endpoint": "tft-summoner-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-summoner-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/summoner/v1/summoners/me": {
      "get": {
        "tags": [
          "tft-summoner-v1"
        ],
        "summary": "Get a summoner by access token.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-summoner-v1/GET_getByAccessToken"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tft-summoner-v1.SummonerDTO",
                  "x-type": "SummonerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-summoner-v1.getByAccessToken",
        "description": "Get a summoner by access token.",
        "parameters": [
          {
            "name": "Authorization",
            "in": "header",
            "required": false,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "Bearer token."
          }
        ],
        "x-endpoint": "tft-summoner-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-summoner-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/tft/summoner/v1/summoners/{encryptedSummonerId}": {
      "get": {
        "tags": [
          "tft-summoner-v1"
        ],
        "summary": "Get a summoner by summoner ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tft-summoner-v1/GET_getBySummonerId"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tft-summoner-v1.SummonerDTO",
                  "x-type": "SummonerDTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tft-summoner-v1.getBySummonerId",
        "description": "Get a summoner by summoner ID.",
        "parameters": [
          {
            "name": "encryptedSummonerId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "Summoner ID"
          }
        ],
        "x-endpoint": "tft-summoner-v1",
        "x-platforms-available": [
          "br1",
          "eun1",
          "euw1",
          "jp1",
          "kr",
          "la1",
          "la2",
          "na1",
          "oc1",
          "ph2",
          "ru",
          "sg2",
          "th2",
          "tr1",
          "tw2",
          "vn2"
        ],
        "x-route-enum": "platform"
      },
      "x-endpoint": "tft-summoner-v1",
      "x-platforms-available": [
        "br1",
        "eun1",
        "euw1",
        "jp1",
        "kr",
        "la1",
        "la2",
        "na1",
        "oc1",
        "ph2",
        "ru",
        "sg2",
        "th2",
        "tr1",
        "tw2",
        "vn2"
      ],
      "x-route-enum": "platform"
    },
    "/lol/tournament-stub/v5/codes": {
      "post": {
        "tags": [
          "tournament-stub-v5"
        ],
        "summary": "Create a tournament code for the given tournament - Stub method",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-stub-v5/POST_createTournamentCode"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-type": "string"
                  },
                  "x-type": "List[string]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-stub-v5.createTournamentCode",
        "description": "Create a tournament code for the given tournament - Stub method",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tournament-stub-v5.TournamentCodeParametersV5",
                "x-type": "TournamentCodeParametersV5"
              }
            }
          },
          "required": true,
          "description": "Metadata for the generated code"
        },
        "parameters": [
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "The number of codes to create (max 1000)"
          },
          {
            "name": "tournamentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            },
            "description": "The tournament ID"
          }
        ],
        "x-endpoint": "tournament-stub-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tournament-stub-v5",
      "x-platforms-available": [
        "americas"
      ],
      "x-route-enum": "regional"
    },
    "/lol/tournament-stub/v5/codes/{tournamentCode}": {
      "get": {
        "tags": [
          "tournament-stub-v5"
        ],
        "summary": "Returns the tournament code DTO associated with a tournament code string - Stub Method",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-stub-v5/GET_getTournamentCode"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tournament-stub-v5.TournamentCodeV5DTO",
                  "x-type": "TournamentCodeV5DTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-stub-v5.getTournamentCode",
        "description": "Returns the tournament code DTO associated with a tournament code string - Stub Method",
        "parameters": [
          {
            "name": "tournamentCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "The tournament code string."
          }
        ],
        "x-endpoint": "tournament-stub-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tournament-stub-v5",
      "x-platforms-available": [
        "americas"
      ],
      "x-route-enum": "regional"
    },
    "/lol/tournament-stub/v5/lobby-events/by-code/{tournamentCode}": {
      "get": {
        "tags": [
          "tournament-stub-v5"
        ],
        "summary": "Gets a list of lobby events by tournament code - Stub method",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-stub-v5/GET_getLobbyEventsByCode"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tournament-stub-v5.LobbyEventV5DTOWrapper",
                  "x-type": "LobbyEventV5DTOWrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-stub-v5.getLobbyEventsByCode",
        "description": "Gets a list of lobby events by tournament code - Stub method",
        "parameters": [
          {
            "name": "tournamentCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "The short code to look up lobby events for"
          }
        ],
        "x-endpoint": "tournament-stub-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tournament-stub-v5",
      "x-platforms-available": [
        "americas"
      ],
      "x-route-enum": "regional"
    },
    "/lol/tournament-stub/v5/providers": {
      "post": {
        "tags": [
          "tournament-stub-v5"
        ],
        "summary": "Creates a tournament provider and returns its ID - Stub method",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-stub-v5/POST_registerProviderData"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "x-type": "int"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-stub-v5.registerProviderData",
        "description": "Creates a tournament provider and returns its ID - Stub method\n## Implementation Notes\nProviders will need to call this endpoint first to register their callback URL and their API key with the tournament system before any other tournament provider endpoints will work.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tournament-stub-v5.ProviderRegistrationParametersV5",
                "x-type": "ProviderRegistrationParametersV5"
              }
            }
          },
          "required": true,
          "description": "The provider definition."
        },
        "x-endpoint": "tournament-stub-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tournament-stub-v5",
      "x-platforms-available": [
        "americas"
      ],
      "x-route-enum": "regional"
    },
    "/lol/tournament-stub/v5/tournaments": {
      "post": {
        "tags": [
          "tournament-stub-v5"
        ],
        "summary": "Creates a tournament and returns its ID - Stub method",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-stub-v5/POST_registerTournament"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "x-type": "int"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-stub-v5.registerTournament",
        "description": "Creates a tournament and returns its ID - Stub method",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tournament-stub-v5.TournamentRegistrationParametersV5",
                "x-type": "TournamentRegistrationParametersV5"
              }
            }
          },
          "required": true,
          "description": "The tournament definition."
        },
        "x-endpoint": "tournament-stub-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tournament-stub-v5",
      "x-platforms-available": [
        "americas"
      ],
      "x-route-enum": "regional"
    },
    "/lol/tournament/v5/codes": {
      "post": {
        "tags": [
          "tournament-v5"
        ],
        "summary": "Create a tournament code for the given tournament.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-v5/POST_createTournamentCode"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "type": "string",
                    "x-type": "string"
                  },
                  "x-type": "List[string]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-v5.createTournamentCode",
        "description": "Create a tournament code for the given tournament.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tournament-v5.TournamentCodeParametersV5",
                "x-type": "TournamentCodeParametersV5"
              }
            }
          },
          "required": true,
          "description": "Metadata for the generated code"
        },
        "parameters": [
          {
            "name": "tournamentId",
            "in": "query",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            },
            "description": "The tournament ID"
          },
          {
            "name": "count",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "The number of codes to create (max 1000)"
          }
        ],
        "x-endpoint": "tournament-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tournament-v5",
      "x-platforms-available": [
        "americas"
      ],
      "x-route-enum": "regional"
    },
    "/lol/tournament/v5/codes/{tournamentCode}": {
      "get": {
        "tags": [
          "tournament-v5"
        ],
        "summary": "Returns the tournament code DTO associated with a tournament code string.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-v5/GET_getTournamentCode"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tournament-v5.TournamentCodeV5DTO",
                  "x-type": "TournamentCodeV5DTO"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-v5.getTournamentCode",
        "description": "Returns the tournament code DTO associated with a tournament code string.",
        "parameters": [
          {
            "name": "tournamentCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "The tournament code string."
          }
        ],
        "x-endpoint": "tournament-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tournament-v5",
      "x-platforms-available": [
        "americas"
      ],
      "x-route-enum": "regional",
      "put": {
        "tags": [
          "tournament-v5"
        ],
        "summary": "Update the pick type, map, spectator type, or allowed puuids for a code.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-v5/PUT_updateCode"
        },
        "responses": {
          "200": {
            "description": "Success"
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-v5.updateCode",
        "description": "Update the pick type, map, spectator type, or allowed puuids for a code.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tournament-v5.TournamentCodeUpdateParametersV5",
                "x-type": "TournamentCodeUpdateParametersV5"
              }
            }
          },
          "required": false,
          "description": "The fields to update"
        },
        "parameters": [
          {
            "name": "tournamentCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "The tournament code to update"
          }
        ],
        "x-endpoint": "tournament-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      }
    },
    "/lol/tournament/v5/games/by-code/{tournamentCode}": {
      "get": {
        "tags": [
          "tournament-v5"
        ],
        "summary": "Get games details",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-v5/GET_getGames"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/tournament-v5.TournamentGamesV5",
                    "x-type": "TournamentGamesV5"
                  },
                  "x-type": "Set[TournamentGamesV5]"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-v5.getGames",
        "description": "Get games details\n## Implementation Notes\nAdditional endpoint to get tournament games. From this endpoint, you are able to get participants PUUID (the callback doesn't contain this info).\n\nYou can also use it to check if the game was recorded and validate callbacks. If the endpoint returns the game, it means a callback was attempted.\n\nThis will only work for tournament codes created after November 10, 2023.",
        "parameters": [
          {
            "name": "tournamentCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            }
          }
        ],
        "x-endpoint": "tournament-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tournament-v5",
      "x-platforms-available": [
        "americas"
      ],
      "x-route-enum": "regional"
    },
    "/lol/tournament/v5/lobby-events/by-code/{tournamentCode}": {
      "get": {
        "tags": [
          "tournament-v5"
        ],
        "summary": "Gets a list of lobby events by tournament code.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-v5/GET_getLobbyEventsByCode"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/tournament-v5.LobbyEventV5DTOWrapper",
                  "x-type": "LobbyEventV5DTOWrapper"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-v5.getLobbyEventsByCode",
        "description": "Gets a list of lobby events by tournament code.",
        "parameters": [
          {
            "name": "tournamentCode",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "The short code to look up lobby events for"
          }
        ],
        "x-endpoint": "tournament-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tournament-v5",
      "x-platforms-available": [
        "americas"
      ],
      "x-route-enum": "regional"
    },
    "/lol/tournament/v5/providers": {
      "post": {
        "tags": [
          "tournament-v5"
        ],
        "summary": "Creates a tournament provider and returns its ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-v5/POST_registerProviderData"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "x-type": "int"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-v5.registerProviderData",
        "description": "Creates a tournament provider and returns its ID.\n## Implementation Notes\nProviders will need to call this endpoint first to register their callback URL and their API key with the tournament system before any other tournament provider endpoints will work.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tournament-v5.ProviderRegistrationParametersV5",
                "x-type": "ProviderRegistrationParametersV5"
              }
            }
          },
          "required": true,
          "description": "The provider definition."
        },
        "x-endpoint": "tournament-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tournament-v5",
      "x-platforms-available": [
        "americas"
      ],
      "x-route-enum": "regional"
    },
    "/lol/tournament/v5/tournaments": {
      "post": {
        "tags": [
          "tournament-v5"
        ],
        "summary": "Creates a tournament and returns its ID.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#tournament-v5/POST_registerTournament"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "type": "integer",
                  "format": "int32",
                  "x-type": "int"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "tournament-v5.registerTournament",
        "description": "Creates a tournament and returns its ID.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/tournament-v5.TournamentRegistrationParametersV5",
                "x-type": "TournamentRegistrationParametersV5"
              }
            }
          },
          "required": true,
          "description": "The tournament definition."
        },
        "x-endpoint": "tournament-v5",
        "x-platforms-available": [
          "americas"
        ],
        "x-route-enum": "regional"
      },
      "x-endpoint": "tournament-v5",
      "x-platforms-available": [
        "americas"
      ],
      "x-route-enum": "regional"
    },
    "/val/content/v1/contents": {
      "get": {
        "tags": [
          "val-content-v1"
        ],
        "summary": "Get content optionally filtered by locale",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#val-content-v1/GET_getContent"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/val-content-v1.ContentDto",
                  "x-type": "ContentDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "val-content-v1.getContent",
        "description": "Get content optionally filtered by locale",
        "parameters": [
          {
            "name": "locale",
            "in": "query",
            "required": false,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          }
        ],
        "x-endpoint": "val-content-v1",
        "x-platforms-available": [
          "ap",
          "br",
          "esports",
          "eu",
          "kr",
          "latam",
          "na"
        ],
        "x-route-enum": "val-platform"
      },
      "x-endpoint": "val-content-v1",
      "x-platforms-available": [
        "ap",
        "br",
        "esports",
        "eu",
        "kr",
        "latam",
        "na"
      ],
      "x-route-enum": "val-platform"
    },
    "/val/match/v1/matches/{matchId}": {
      "get": {
        "tags": [
          "val-match-v1"
        ],
        "summary": "Get match by id",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#val-match-v1/GET_getMatch"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/val-match-v1.MatchDto",
                  "x-type": "MatchDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "val-match-v1.getMatch",
        "x-nullable-404": true,
        "description": "Get match by id",
        "parameters": [
          {
            "name": "matchId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          }
        ],
        "x-endpoint": "val-match-v1",
        "x-platforms-available": [
          "ap",
          "br",
          "esports",
          "eu",
          "kr",
          "latam",
          "na"
        ],
        "x-route-enum": "val-platform"
      },
      "x-endpoint": "val-match-v1",
      "x-platforms-available": [
        "ap",
        "br",
        "esports",
        "eu",
        "kr",
        "latam",
        "na"
      ],
      "x-route-enum": "val-platform"
    },
    "/val/match/v1/matchlists/by-puuid/{puuid}": {
      "get": {
        "tags": [
          "val-match-v1"
        ],
        "summary": "Get matchlist for games played by puuid",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#val-match-v1/GET_getMatchlist"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/val-match-v1.MatchlistDto",
                  "x-type": "MatchlistDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "val-match-v1.getMatchlist",
        "description": "Get matchlist for games played by puuid",
        "parameters": [
          {
            "name": "puuid",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "String"
            }
          }
        ],
        "x-endpoint": "val-match-v1",
        "x-platforms-available": [
          "ap",
          "br",
          "esports",
          "eu",
          "kr",
          "latam",
          "na"
        ],
        "x-route-enum": "val-platform"
      },
      "x-endpoint": "val-match-v1",
      "x-platforms-available": [
        "ap",
        "br",
        "esports",
        "eu",
        "kr",
        "latam",
        "na"
      ],
      "x-route-enum": "val-platform"
    },
    "/val/match/v1/recent-matches/by-queue/{queue}": {
      "get": {
        "tags": [
          "val-match-v1"
        ],
        "summary": "Get recent matches",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#val-match-v1/GET_getRecent"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/val-match-v1.RecentMatchesDto",
                  "x-type": "RecentMatchesDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "val-match-v1.getRecent",
        "description": "Get recent matches\n## Implementation Notes\nReturns a list of match ids that have completed in the last 10 minutes for live regions and 12 hours for the esports routing value. NA/LATAM/BR share a match history deployment. As such, recent matches will return a combined list of matches from those three regions. Requests are load balanced so you may see some inconsistencies as matches are added/removed from the list.",
        "parameters": [
          {
            "name": "queue",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "competitive",
                "unrated",
                "spikerush",
                "tournamentmode",
                "deathmatch",
                "onefa",
                "ggteam",
                "hurm"
              ]
            }
          }
        ],
        "x-endpoint": "val-match-v1",
        "x-platforms-available": [
          "ap",
          "br",
          "esports",
          "eu",
          "kr",
          "latam",
          "na"
        ],
        "x-route-enum": "val-platform"
      },
      "x-endpoint": "val-match-v1",
      "x-platforms-available": [
        "ap",
        "br",
        "esports",
        "eu",
        "kr",
        "latam",
        "na"
      ],
      "x-route-enum": "val-platform"
    },
    "/val/ranked/v1/leaderboards/by-act/{actId}": {
      "get": {
        "tags": [
          "val-ranked-v1"
        ],
        "summary": "Get leaderboard for the competitive queue",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#val-ranked-v1/GET_getLeaderboard"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/val-ranked-v1.LeaderboardDto",
                  "x-type": "LeaderboardDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "val-ranked-v1.getLeaderboard",
        "x-nullable-404": true,
        "description": "Get leaderboard for the competitive queue",
        "parameters": [
          {
            "name": "actId",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "x-type": "string"
            },
            "description": "Act ids can be found using the val-content API."
          },
          {
            "name": "size",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "Defaults to 200. Valid values: 1 to 200."
          },
          {
            "name": "startIndex",
            "in": "query",
            "required": false,
            "schema": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "description": "Defaults to 0."
          }
        ],
        "x-endpoint": "val-ranked-v1",
        "x-platforms-available": [
          "ap",
          "br",
          "eu",
          "kr",
          "latam",
          "na"
        ],
        "x-route-enum": "val-platform"
      },
      "x-endpoint": "val-ranked-v1",
      "x-platforms-available": [
        "ap",
        "br",
        "eu",
        "kr",
        "latam",
        "na"
      ],
      "x-route-enum": "val-platform"
    },
    "/val/status/v1/platform-data": {
      "get": {
        "tags": [
          "val-status-v1"
        ],
        "summary": "Get VALORANT status for the given platform.",
        "externalDocs": {
          "description": "Official API Reference",
          "url": "https://developer.riotgames.com/api-methods/#val-status-v1/GET_getPlatformData"
        },
        "responses": {
          "200": {
            "description": "Success",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/val-status-v1.PlatformDataDto",
                  "x-type": "PlatformDataDto"
                }
              }
            }
          },
          "400": {
            "description": "Bad request"
          },
          "401": {
            "description": "Unauthorized"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "description": "Data not found"
          },
          "405": {
            "description": "Method not allowed"
          },
          "415": {
            "description": "Unsupported media type"
          },
          "429": {
            "description": "Rate limit exceeded"
          },
          "500": {
            "description": "Internal server error"
          },
          "502": {
            "description": "Bad gateway"
          },
          "503": {
            "description": "Service unavailable"
          },
          "504": {
            "description": "Gateway timeout"
          }
        },
        "operationId": "val-status-v1.getPlatformData",
        "description": "Get VALORANT status for the given platform.",
        "x-endpoint": "val-status-v1",
        "x-platforms-available": [
          "ap",
          "br",
          "eu",
          "kr",
          "latam",
          "na"
        ],
        "x-route-enum": "val-platform"
      },
      "x-endpoint": "val-status-v1",
      "x-platforms-available": [
        "ap",
        "br",
        "eu",
        "kr",
        "latam",
        "na"
      ],
      "x-route-enum": "val-platform"
    }
  },
  "components": {
    "schemas": {
      "Error": {
        "type": "object",
        "properties": {
          "status": {
            "type": "object",
            "properties": {
              "status_code": {
                "type": "integer"
              },
              "message": {
                "type": "string"
              }
            }
          }
        }
      },
      "account-v1.AccountDto": {
        "type": "object",
        "title": "AccountDto",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string"
          },
          "gameName": {
            "type": "string",
            "x-type": "string",
            "description": "This field may be excluded from the response if the account doesn't have a gameName."
          },
          "tagLine": {
            "type": "string",
            "x-type": "string",
            "description": "This field may be excluded from the response if the account doesn't have a tagLine."
          }
        },
        "required": [
          "puuid"
        ]
      },
      "account-v1.ActiveShardDto": {
        "type": "object",
        "title": "ActiveShardDto",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string"
          },
          "game": {
            "type": "string",
            "x-type": "string"
          },
          "activeShard": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "puuid",
          "game",
          "activeShard"
        ]
      },
      "champion-mastery-v4.ChampionMasteryDto": {
        "type": "object",
        "title": "ChampionMasteryDto",
        "properties": {
          "championPointsUntilNextLevel": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Number of points needed to achieve next level. Zero if player reached maximum champion level for this champion."
          },
          "chestGranted": {
            "type": "boolean",
            "x-type": "boolean",
            "description": "Is chest granted for this champion or not in current season."
          },
          "championId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Champion ID for this entry.",
            "x-enum": "champion"
          },
          "lastPlayTime": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Last time this champion was played by this player - in Unix milliseconds time format."
          },
          "championLevel": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Champion level for specified player and champion combination."
          },
          "summonerId": {
            "type": "string",
            "x-type": "string",
            "description": "Summoner ID for this entry. (Encrypted)"
          },
          "championPoints": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Total number of champion points for this player and champion combination - they are used to determine championLevel."
          },
          "championPointsSinceLastLevel": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Number of points earned since current level has been achieved."
          },
          "tokensEarned": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The token earned for this champion at the current championLevel. When the championLevel is advanced the tokensEarned resets to 0."
          },
          "puuid": {
            "type": "string",
            "x-type": "string"
          }
        },
        "description": "This object contains single Champion Mastery information for player and champion combination.",
        "required": [
          "championPointsUntilNextLevel",
          "chestGranted",
          "championId",
          "lastPlayTime",
          "championLevel",
          "summonerId",
          "championPoints",
          "championPointsSinceLastLevel",
          "tokensEarned"
        ]
      },
      "champion-v3.ChampionInfo": {
        "type": "object",
        "title": "ChampionInfo",
        "properties": {
          "maxNewPlayerLevel": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "freeChampionIdsForNewPlayers": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "x-type": "int",
              "x-enum": "champion"
            },
            "x-type": "List[int]"
          },
          "freeChampionIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "x-type": "int",
              "x-enum": "champion"
            },
            "x-type": "List[int]"
          }
        },
        "required": [
          "maxNewPlayerLevel",
          "freeChampionIdsForNewPlayers",
          "freeChampionIds"
        ]
      },
      "clash-v1.PlayerDto": {
        "type": "object",
        "title": "PlayerDto",
        "properties": {
          "summonerId": {
            "type": "string",
            "x-type": "string"
          },
          "teamId": {
            "type": "string",
            "x-type": "string"
          },
          "position": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "UNSELECTED",
              "FILL",
              "TOP",
              "JUNGLE",
              "MIDDLE",
              "BOTTOM",
              "UTILITY"
            ],
            "description": "(Legal values:  UNSELECTED,  FILL,  TOP,  JUNGLE,  MIDDLE,  BOTTOM,  UTILITY)"
          },
          "role": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "CAPTAIN",
              "MEMBER"
            ],
            "description": "(Legal values:  CAPTAIN,  MEMBER)"
          }
        },
        "required": [
          "summonerId",
          "position",
          "role"
        ]
      },
      "clash-v1.TeamDto": {
        "type": "object",
        "title": "TeamDto",
        "properties": {
          "id": {
            "type": "string",
            "x-type": "string"
          },
          "tournamentId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "iconId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "tier": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "captain": {
            "type": "string",
            "x-type": "string",
            "description": "Summoner ID of the team captain."
          },
          "abbreviation": {
            "type": "string",
            "x-type": "string"
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/clash-v1.PlayerDto",
              "x-type": "PlayerDto"
            },
            "x-type": "List[PlayerDto]",
            "description": "Team members."
          }
        },
        "required": [
          "id",
          "tournamentId",
          "name",
          "iconId",
          "tier",
          "captain",
          "abbreviation",
          "players"
        ]
      },
      "clash-v1.TournamentDto": {
        "type": "object",
        "title": "TournamentDto",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "themeId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "nameKey": {
            "type": "string",
            "x-type": "string"
          },
          "nameKeySecondary": {
            "type": "string",
            "x-type": "string"
          },
          "schedule": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/clash-v1.TournamentPhaseDto",
              "x-type": "TournamentPhaseDto"
            },
            "x-type": "List[TournamentPhaseDto]",
            "description": "Tournament phase."
          }
        },
        "required": [
          "id",
          "themeId",
          "nameKey",
          "nameKeySecondary",
          "schedule"
        ]
      },
      "clash-v1.TournamentPhaseDto": {
        "type": "object",
        "title": "TournamentPhaseDto",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "registrationTime": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "startTime": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "cancelled": {
            "type": "boolean",
            "x-type": "boolean"
          }
        },
        "required": [
          "id",
          "registrationTime",
          "startTime",
          "cancelled"
        ]
      },
      "league-exp-v4.LeagueEntryDTO": {
        "type": "object",
        "title": "LeagueEntryDTO",
        "properties": {
          "leagueId": {
            "type": "string",
            "x-type": "string"
          },
          "summonerId": {
            "type": "string",
            "x-type": "string",
            "description": "Player's summonerId (Encrypted)"
          },
          "summonerName": {
            "type": "string",
            "x-type": "string"
          },
          "queueType": {
            "type": "string",
            "x-type": "string",
            "x-enum": "queueType"
          },
          "tier": {
            "type": "string",
            "x-type": "string",
            "x-enum": "tier"
          },
          "rank": {
            "type": "string",
            "x-type": "string",
            "description": "The player's division within a tier.",
            "x-enum": "division"
          },
          "leaguePoints": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "wins": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Winning team on Summoners Rift. First placement in Teamfight Tactics."
          },
          "losses": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Losing team on Summoners Rift. Second through eighth placement in Teamfight Tactics."
          },
          "hotStreak": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "veteran": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "freshBlood": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "inactive": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "miniSeries": {
            "$ref": "#/components/schemas/league-exp-v4.MiniSeriesDTO",
            "x-type": "MiniSeriesDTO"
          }
        },
        "required": [
          "leagueId",
          "summonerId",
          "summonerName",
          "queueType",
          "tier",
          "rank",
          "leaguePoints",
          "wins",
          "losses",
          "hotStreak",
          "veteran",
          "freshBlood",
          "inactive"
        ]
      },
      "league-exp-v4.MiniSeriesDTO": {
        "type": "object",
        "title": "MiniSeriesDTO",
        "properties": {
          "losses": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "progress": {
            "type": "string",
            "x-type": "string"
          },
          "target": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "wins": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "losses",
          "progress",
          "target",
          "wins"
        ]
      },
      "league-v4.LeagueListDTO": {
        "type": "object",
        "title": "LeagueListDTO",
        "properties": {
          "leagueId": {
            "type": "string",
            "x-type": "string"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/league-v4.LeagueItemDTO",
              "x-type": "LeagueItemDTO"
            },
            "x-type": "List[LeagueItemDTO]"
          },
          "tier": {
            "type": "string",
            "x-type": "string",
            "x-enum": "tier"
          },
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "queue": {
            "type": "string",
            "x-type": "string",
            "x-enum": "queueType"
          }
        },
        "required": [
          "entries",
          "tier"
        ]
      },
      "league-v4.LeagueItemDTO": {
        "type": "object",
        "title": "LeagueItemDTO",
        "properties": {
          "freshBlood": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "wins": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Winning team on Summoners Rift."
          },
          "summonerName": {
            "type": "string",
            "x-type": "string"
          },
          "miniSeries": {
            "$ref": "#/components/schemas/league-v4.MiniSeriesDTO",
            "x-type": "MiniSeriesDTO"
          },
          "inactive": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "veteran": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "hotStreak": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "rank": {
            "type": "string",
            "x-type": "string",
            "x-enum": "division"
          },
          "leaguePoints": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "losses": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Losing team on Summoners Rift."
          },
          "summonerId": {
            "type": "string",
            "x-type": "string",
            "description": "Player's encrypted summonerId."
          }
        },
        "required": [
          "freshBlood",
          "wins",
          "summonerName",
          "inactive",
          "veteran",
          "hotStreak",
          "rank",
          "leaguePoints",
          "losses",
          "summonerId"
        ]
      },
      "league-v4.MiniSeriesDTO": {
        "type": "object",
        "title": "MiniSeriesDTO",
        "properties": {
          "losses": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "progress": {
            "type": "string",
            "x-type": "string"
          },
          "target": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "wins": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "losses",
          "progress",
          "target",
          "wins"
        ]
      },
      "league-v4.LeagueEntryDTO": {
        "type": "object",
        "title": "LeagueEntryDTO",
        "properties": {
          "leagueId": {
            "type": "string",
            "x-type": "string"
          },
          "summonerId": {
            "type": "string",
            "x-type": "string",
            "description": "Player's encrypted summonerId."
          },
          "summonerName": {
            "type": "string",
            "x-type": "string"
          },
          "queueType": {
            "type": "string",
            "x-type": "string",
            "x-enum": "queueType"
          },
          "tier": {
            "type": "string",
            "x-type": "string",
            "x-enum": "tier"
          },
          "rank": {
            "type": "string",
            "x-type": "string",
            "description": "The player's division within a tier.",
            "x-enum": "division"
          },
          "leaguePoints": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "wins": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Winning team on Summoners Rift."
          },
          "losses": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Losing team on Summoners Rift."
          },
          "hotStreak": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "veteran": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "freshBlood": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "inactive": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "miniSeries": {
            "$ref": "#/components/schemas/league-v4.MiniSeriesDTO",
            "x-type": "MiniSeriesDTO"
          }
        },
        "required": [
          "summonerId",
          "summonerName",
          "queueType",
          "leaguePoints",
          "wins",
          "losses",
          "hotStreak",
          "veteran",
          "freshBlood",
          "inactive"
        ]
      },
      "lol-challenges-v1.ChallengeConfigInfoDto": {
        "type": "object",
        "title": "ChallengeConfigInfoDto",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "localizedNames": {
            "type": "object",
            "x-key": {
              "type": "string",
              "x-type": "String"
            },
            "additionalProperties": {
              "type": "object",
              "x-key": {
                "type": "string",
                "x-type": "String"
              },
              "additionalProperties": {
                "type": "string",
                "x-type": "string"
              },
              "x-type": "Map[String, string]"
            },
            "x-type": "Map[String, Map[String, string]]"
          },
          "state": {
            "x-type": "string",
            "type": "string",
            "enum": [
              "DISABLED",
              "HIDDEN",
              "ENABLED",
              "ARCHIVED"
            ],
            "description": "DISABLED - not visible and not calculated, HIDDEN - not visible, but calculated, ENABLED - visible and calculated, ARCHIVED - visible, but not calculated"
          },
          "tracking": {
            "x-type": "string",
            "type": "string",
            "enum": [
              "LIFETIME",
              "SEASON"
            ],
            "description": "LIFETIME - stats are incremented without reset, SEASON - stats are accumulated by season and reset at the beginning of new season"
          },
          "startTimestamp": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "endTimestamp": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "leaderboard": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "thresholds": {
            "type": "object",
            "x-key": {
              "type": "string",
              "x-type": "String"
            },
            "additionalProperties": {
              "type": "number",
              "format": "double",
              "x-type": "double"
            },
            "x-type": "Map[String, double]"
          }
        },
        "required": [
          "id",
          "localizedNames",
          "state",
          "leaderboard",
          "thresholds"
        ]
      },
      "lol-challenges-v1.State": {
        "type": "object",
        "title": "State",
        "properties": {},
        "description": "DISABLED - not visible and not calculated,\nHIDDEN - not visible, but calculated,\nENABLED - visible and calculated,\nARCHIVED - visible, but not calculated"
      },
      "lol-challenges-v1.Tracking": {
        "type": "object",
        "title": "Tracking",
        "properties": {},
        "description": "LIFETIME - stats are incremented without reset,\nSEASON - stats are accumulated by season and reset at the beginning of new season"
      },
      "lol-challenges-v1.ApexPlayerInfoDto": {
        "type": "object",
        "title": "ApexPlayerInfoDto",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string"
          },
          "value": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "puuid",
          "value",
          "position"
        ]
      },
      "lol-challenges-v1.Level": {
        "type": "object",
        "title": "Level",
        "properties": {},
        "description": "0 NONE,\n1 IRON,\n2 BRONZE,\n3 SILVER,\n4 GOLD,\n5 PLATINUM,\n6 DIAMOND,\n7 MASTER,\n8 GRANDMASTER,\n9 CHALLENGER"
      },
      "lol-challenges-v1.PlayerInfoDto": {
        "type": "object",
        "title": "PlayerInfoDto",
        "properties": {
          "challenges": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lol-challenges-v1.ChallengeInfo",
              "x-type": "ChallengeInfo"
            },
            "x-type": "List[ChallengeInfo]"
          },
          "preferences": {
            "$ref": "#/components/schemas/lol-challenges-v1.PlayerClientPreferences",
            "x-type": "PlayerClientPreferences"
          },
          "totalPoints": {
            "$ref": "#/components/schemas/lol-challenges-v1.ChallengePoints",
            "x-type": "ChallengePoints"
          },
          "categoryPoints": {
            "type": "object",
            "x-key": {
              "type": "string",
              "x-type": "String"
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/lol-challenges-v1.ChallengePoints",
              "x-type": "ChallengePoints"
            },
            "x-type": "Map[String, ChallengePoints]"
          }
        },
        "required": [
          "challenges",
          "preferences",
          "totalPoints",
          "categoryPoints"
        ]
      },
      "lol-challenges-v1.ChallengeInfo": {
        "type": "object",
        "title": "ChallengeInfo",
        "properties": {
          "challengeId": {
            "x-type": "long",
            "type": "integer",
            "format": "int64"
          },
          "percentile": {
            "x-type": "double",
            "type": "number",
            "format": "double"
          },
          "level": {
            "x-type": "string",
            "type": "string",
            "x-enum": "tier"
          },
          "value": {
            "x-type": "double",
            "type": "number",
            "format": "double"
          },
          "achievedTime": {
            "x-type": "long",
            "type": "integer",
            "format": "int64"
          },
          "position": {
            "x-type": "long",
            "type": "integer",
            "format": "int64"
          },
          "playersInLevel": {
            "x-type": "long",
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "challengeId",
          "percentile",
          "level",
          "value"
        ]
      },
      "lol-challenges-v1.PlayerClientPreferences": {
        "type": "object",
        "title": "PlayerClientPreferences",
        "properties": {
          "bannerAccent": {
            "x-type": "string",
            "type": "string"
          },
          "title": {
            "x-type": "string",
            "type": "string"
          },
          "challengeIds": {
            "x-type": "List[long]",
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            }
          },
          "crestBorder": {
            "x-type": "string",
            "type": "string"
          },
          "prestigeCrestBorderLevel": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": []
      },
      "lol-challenges-v1.ChallengePoints": {
        "type": "object",
        "title": "ChallengePoints",
        "properties": {
          "level": {
            "x-type": "string",
            "type": "string",
            "x-enum": "tier"
          },
          "current": {
            "x-type": "long",
            "type": "integer",
            "format": "int64"
          },
          "max": {
            "x-type": "long",
            "type": "integer",
            "format": "int64"
          },
          "percentile": {
            "x-type": "double",
            "type": "number",
            "format": "double"
          }
        },
        "required": [
          "level",
          "current",
          "max"
        ]
      },
      "lol-status-v4.PlatformDataDto": {
        "type": "object",
        "title": "PlatformDataDto",
        "properties": {
          "id": {
            "type": "string",
            "x-type": "string"
          },
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "locales": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string",
              "x-enum": "locale"
            },
            "x-type": "List[string]"
          },
          "maintenances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lol-status-v4.StatusDto",
              "x-type": "StatusDto"
            },
            "x-type": "List[StatusDto]"
          },
          "incidents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lol-status-v4.StatusDto",
              "x-type": "StatusDto"
            },
            "x-type": "List[StatusDto]"
          }
        },
        "required": [
          "id",
          "name",
          "locales",
          "maintenances",
          "incidents"
        ]
      },
      "lol-status-v4.StatusDto": {
        "type": "object",
        "title": "StatusDto",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "maintenance_status": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "scheduled",
              "in_progress",
              "complete"
            ],
            "description": "(Legal values:  scheduled,  in_progress,  complete)"
          },
          "incident_severity": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "info",
              "warning",
              "critical"
            ],
            "description": "(Legal values:  info,  warning,  critical)"
          },
          "titles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lol-status-v4.ContentDto",
              "x-type": "ContentDto"
            },
            "x-type": "List[ContentDto]"
          },
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lol-status-v4.UpdateDto",
              "x-type": "UpdateDto"
            },
            "x-type": "List[UpdateDto]"
          },
          "created_at": {
            "type": "string",
            "x-type": "string"
          },
          "archive_at": {
            "type": "string",
            "x-type": "string"
          },
          "updated_at": {
            "type": "string",
            "x-type": "string"
          },
          "platforms": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "windows",
                "macos",
                "android",
                "ios",
                "ps4",
                "xbone",
                "switch"
              ]
            },
            "x-type": "List[string]",
            "description": "(Legal values: windows, macos, android, ios, ps4, xbone, switch)"
          }
        },
        "required": [
          "id",
          "titles",
          "updates",
          "created_at",
          "platforms"
        ]
      },
      "lol-status-v4.ContentDto": {
        "type": "object",
        "title": "ContentDto",
        "properties": {
          "locale": {
            "type": "string",
            "x-type": "string",
            "x-enum": "locale"
          },
          "content": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "locale",
          "content"
        ]
      },
      "lol-status-v4.UpdateDto": {
        "type": "object",
        "title": "UpdateDto",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "author": {
            "type": "string",
            "x-type": "string"
          },
          "publish": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "publish_locations": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "riotclient",
                "riotstatus",
                "game"
              ]
            },
            "x-type": "List[string]",
            "description": "(Legal values: riotclient, riotstatus, game)"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lol-status-v4.ContentDto",
              "x-type": "ContentDto"
            },
            "x-type": "List[ContentDto]"
          },
          "created_at": {
            "type": "string",
            "x-type": "string"
          },
          "updated_at": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "id",
          "author",
          "publish",
          "publish_locations",
          "translations",
          "created_at",
          "updated_at"
        ]
      },
      "lor-deck-v1.DeckDto": {
        "type": "object",
        "title": "DeckDto",
        "properties": {
          "id": {
            "type": "string",
            "x-type": "string"
          },
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "code": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "id",
          "name",
          "code"
        ]
      },
      "lor-deck-v1.NewDeckDto": {
        "type": "object",
        "title": "NewDeckDto",
        "properties": {
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "code": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "name",
          "code"
        ]
      },
      "lor-inventory-v1.CardDto": {
        "type": "object",
        "title": "CardDto",
        "properties": {
          "code": {
            "type": "string",
            "x-type": "string"
          },
          "count": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "code",
          "count"
        ]
      },
      "lor-match-v1.MatchDto": {
        "type": "object",
        "title": "MatchDto",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/lor-match-v1.MetadataDto",
            "x-type": "MetadataDto",
            "description": "Match metadata."
          },
          "info": {
            "$ref": "#/components/schemas/lor-match-v1.InfoDto",
            "x-type": "InfoDto",
            "description": "Match info."
          }
        },
        "required": [
          "metadata",
          "info"
        ]
      },
      "lor-match-v1.MetadataDto": {
        "type": "object",
        "title": "MetadataDto",
        "properties": {
          "data_version": {
            "type": "string",
            "x-type": "string",
            "description": "Match data version."
          },
          "match_id": {
            "type": "string",
            "x-type": "string",
            "description": "Match id."
          },
          "participants": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "List[string]",
            "description": "A list of participant PUUIDs."
          }
        },
        "required": [
          "data_version",
          "match_id",
          "participants"
        ]
      },
      "lor-match-v1.InfoDto": {
        "type": "object",
        "title": "InfoDto",
        "properties": {
          "game_mode": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "Constructed",
              "Expeditions",
              "Tutorial"
            ],
            "description": "(Legal values:  Constructed,  Expeditions,  Tutorial)"
          },
          "game_type": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "Ranked",
              "Normal",
              "AI",
              "Tutorial",
              "VanillaTrial",
              "Singleton",
              "StandardGauntlet"
            ],
            "description": "(Legal values:  Ranked,  Normal,  AI,  Tutorial,  VanillaTrial,  Singleton,  StandardGauntlet)"
          },
          "game_start_time_utc": {
            "type": "string",
            "x-type": "string"
          },
          "game_version": {
            "type": "string",
            "x-type": "string"
          },
          "game_format": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "standard",
              "eternal"
            ],
            "description": "(Legal values:  standard,  eternal)"
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lor-match-v1.PlayerDto",
              "x-type": "PlayerDto"
            },
            "x-type": "List[PlayerDto]"
          },
          "total_turn_count": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Total turns taken by both players."
          }
        },
        "required": [
          "game_mode",
          "game_type",
          "game_start_time_utc",
          "game_version",
          "game_format",
          "players",
          "total_turn_count"
        ]
      },
      "lor-match-v1.PlayerDto": {
        "type": "object",
        "title": "PlayerDto",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string"
          },
          "deck_id": {
            "type": "string",
            "x-type": "string"
          },
          "deck_code": {
            "type": "string",
            "x-type": "string",
            "description": "Code for the deck played. Refer to LOR documentation for details on deck codes."
          },
          "factions": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "List[string]"
          },
          "game_outcome": {
            "type": "string",
            "x-type": "string"
          },
          "order_of_play": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The order in which the players took turns."
          }
        },
        "required": [
          "puuid",
          "deck_id",
          "deck_code",
          "factions",
          "game_outcome",
          "order_of_play"
        ]
      },
      "lor-ranked-v1.LeaderboardDto": {
        "type": "object",
        "title": "LeaderboardDto",
        "properties": {
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lor-ranked-v1.PlayerDto",
              "x-type": "PlayerDto"
            },
            "x-type": "List[PlayerDto]",
            "description": "A list of players in Master tier."
          }
        },
        "required": [
          "players"
        ]
      },
      "lor-ranked-v1.PlayerDto": {
        "type": "object",
        "title": "PlayerDto",
        "properties": {
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "rank": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "lp": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "League points."
          }
        },
        "required": [
          "name",
          "rank",
          "lp"
        ]
      },
      "lor-status-v1.PlatformDataDto": {
        "type": "object",
        "title": "PlatformDataDto",
        "properties": {
          "id": {
            "type": "string",
            "x-type": "string"
          },
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "locales": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string",
              "x-enum": "locale"
            },
            "x-type": "List[string]"
          },
          "maintenances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lor-status-v1.StatusDto",
              "x-type": "StatusDto"
            },
            "x-type": "List[StatusDto]"
          },
          "incidents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lor-status-v1.StatusDto",
              "x-type": "StatusDto"
            },
            "x-type": "List[StatusDto]"
          }
        },
        "required": [
          "id",
          "name",
          "locales",
          "maintenances",
          "incidents"
        ]
      },
      "lor-status-v1.StatusDto": {
        "type": "object",
        "title": "StatusDto",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "maintenance_status": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "scheduled",
              "in_progress",
              "complete"
            ],
            "description": "(Legal values:  scheduled,  in_progress,  complete)"
          },
          "incident_severity": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "info",
              "warning",
              "critical"
            ],
            "description": "(Legal values:  info,  warning,  critical)"
          },
          "titles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lor-status-v1.ContentDto",
              "x-type": "ContentDto"
            },
            "x-type": "List[ContentDto]"
          },
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lor-status-v1.UpdateDto",
              "x-type": "UpdateDto"
            },
            "x-type": "List[UpdateDto]"
          },
          "created_at": {
            "type": "string",
            "x-type": "string"
          },
          "archive_at": {
            "type": "string",
            "x-type": "string"
          },
          "updated_at": {
            "type": "string",
            "x-type": "string"
          },
          "platforms": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "windows",
                "macos",
                "android",
                "ios",
                "ps4",
                "xbone",
                "switch"
              ]
            },
            "x-type": "List[string]",
            "description": "(Legal values: windows, macos, android, ios, ps4, xbone, switch)"
          }
        },
        "required": [
          "id",
          "maintenance_status",
          "incident_severity",
          "titles",
          "updates",
          "created_at",
          "archive_at",
          "updated_at",
          "platforms"
        ]
      },
      "lor-status-v1.ContentDto": {
        "type": "object",
        "title": "ContentDto",
        "properties": {
          "locale": {
            "type": "string",
            "x-type": "string",
            "x-enum": "locale"
          },
          "content": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "locale",
          "content"
        ]
      },
      "lor-status-v1.UpdateDto": {
        "type": "object",
        "title": "UpdateDto",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "author": {
            "type": "string",
            "x-type": "string"
          },
          "publish": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "publish_locations": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "riotclient",
                "riotstatus",
                "game"
              ]
            },
            "x-type": "List[string]",
            "description": "(Legal values: riotclient, riotstatus, game)"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/lor-status-v1.ContentDto",
              "x-type": "ContentDto"
            },
            "x-type": "List[ContentDto]"
          },
          "created_at": {
            "type": "string",
            "x-type": "string"
          },
          "updated_at": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "id",
          "author",
          "publish",
          "publish_locations",
          "translations",
          "created_at",
          "updated_at"
        ]
      },
      "match-v5.MatchDto": {
        "type": "object",
        "title": "MatchDto",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/match-v5.MetadataDto",
            "x-type": "MetadataDto",
            "description": "Match metadata."
          },
          "info": {
            "$ref": "#/components/schemas/match-v5.InfoDto",
            "x-type": "InfoDto",
            "description": "Match info."
          }
        },
        "required": [
          "metadata",
          "info"
        ]
      },
      "match-v5.MetadataDto": {
        "type": "object",
        "title": "MetadataDto",
        "properties": {
          "dataVersion": {
            "type": "string",
            "x-type": "string",
            "description": "Match data version."
          },
          "matchId": {
            "type": "string",
            "x-type": "string",
            "description": "Match id."
          },
          "participants": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "List[string]",
            "description": "A list of participant PUUIDs."
          }
        },
        "required": [
          "dataVersion",
          "matchId",
          "participants"
        ]
      },
      "match-v5.InfoDto": {
        "type": "object",
        "title": "InfoDto",
        "properties": {
          "gameCreation": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Unix timestamp for when the game is created on the game server (i.e., the loading screen)."
          },
          "gameDuration": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Prior to patch 11.20, this field returns the game length in milliseconds calculated from gameEndTimestamp - gameStartTimestamp. Post patch 11.20, this field returns the max timePlayed of any participant in the game in seconds, which makes the behavior of this field consistent with that of match-v4. The best way to handling the change in this field is to treat the value as milliseconds if the gameEndTimestamp field isn't in the response and to treat the value as seconds if gameEndTimestamp is in the response."
          },
          "gameEndTimestamp": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Unix timestamp for when match ends on the game server. This timestamp can occasionally be significantly longer than when the match \"ends\". The most reliable way of determining the timestamp for the end of the match would be to add the max time played of any participant to the gameStartTimestamp. This field was added to match-v5 in patch 11.20 on Oct 5th, 2021."
          },
          "gameId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "gameMode": {
            "type": "string",
            "x-type": "string",
            "description": "Refer to the Game Constants documentation.",
            "x-enum": "gameMode"
          },
          "gameName": {
            "type": "string",
            "x-type": "string"
          },
          "gameStartTimestamp": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Unix timestamp for when match starts on the game server."
          },
          "gameType": {
            "type": "string",
            "x-type": "string",
            "x-enum": "gameType"
          },
          "gameVersion": {
            "type": "string",
            "x-type": "string",
            "description": "The first two parts can be used to determine the patch a game was played on."
          },
          "mapId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Refer to the Game Constants documentation.",
            "x-enum": "map"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/match-v5.ParticipantDto",
              "x-type": "ParticipantDto"
            },
            "x-type": "List[ParticipantDto]"
          },
          "platformId": {
            "type": "string",
            "x-type": "string",
            "description": "Platform where the match was played."
          },
          "queueId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Refer to the Game Constants documentation.",
            "x-enum": "queue"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/match-v5.TeamDto",
              "x-type": "TeamDto"
            },
            "x-type": "List[TeamDto]"
          },
          "tournamentCode": {
            "type": "string",
            "x-type": "string",
            "description": "Tournament code used to generate the match. This field was added to match-v5 in patch 11.13 on June 23rd, 2021."
          },
          "endOfGameResult": {
            "type": "string"
          }
        },
        "required": [
          "gameCreation",
          "gameDuration",
          "gameId",
          "gameMode",
          "gameName",
          "gameStartTimestamp",
          "gameType",
          "gameVersion",
          "mapId",
          "participants",
          "platformId",
          "queueId",
          "teams"
        ]
      },
      "match-v5.ParticipantDto": {
        "type": "object",
        "title": "ParticipantDto",
        "properties": {
          "assists": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "baronKills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "bountyLevel": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "champExperience": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "champLevel": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "championId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Prior to patch 11.4, on Feb 18th, 2021, this field returned invalid championIds. We recommend determining the champion based on the championName field for matches played prior to patch 11.4.",
            "x-enum": "champion"
          },
          "championName": {
            "type": "string",
            "x-type": "string"
          },
          "championTransform": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "This field is currently only utilized for Kayn's transformations. (Legal values: 0 - None, 1 - Slayer, 2 - Assassin)"
          },
          "consumablesPurchased": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "damageDealtToBuildings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "damageDealtToObjectives": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "damageDealtToTurrets": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "damageSelfMitigated": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "deaths": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "detectorWardsPlaced": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "doubleKills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "dragonKills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "firstBloodAssist": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "firstBloodKill": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "firstTowerAssist": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "firstTowerKill": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "gameEndedInEarlySurrender": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "gameEndedInSurrender": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "goldEarned": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "goldSpent": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "individualPosition": {
            "type": "string",
            "x-type": "string",
            "description": "Both individualPosition and teamPosition are computed by the game server and are different versions of the most likely position played by a player. The individualPosition is the best guess for which position the player actually played in isolation of anything else. The teamPosition is the best guess for which position the player actually played if we add the constraint that each team must have one top player, one jungle, one middle, etc. Generally the recommendation is to use the teamPosition field over the individualPosition field."
          },
          "inhibitorKills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "inhibitorTakedowns": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "inhibitorsLost": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "item0": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "item1": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "item2": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "item3": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "item4": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "item5": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "item6": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "itemsPurchased": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "killingSprees": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "kills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "lane": {
            "type": "string",
            "x-type": "string"
          },
          "largestCriticalStrike": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "largestKillingSpree": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "largestMultiKill": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "longestTimeSpentLiving": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "magicDamageDealt": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "magicDamageDealtToChampions": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "magicDamageTaken": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "neutralMinionsKilled": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "nexusKills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "nexusTakedowns": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "nexusLost": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "objectivesStolen": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "objectivesStolenAssists": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "participantId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "pentaKills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "perks": {
            "$ref": "#/components/schemas/match-v5.PerksDto",
            "x-type": "PerksDto"
          },
          "physicalDamageDealt": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "physicalDamageDealtToChampions": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "physicalDamageTaken": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "profileIcon": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "puuid": {
            "type": "string",
            "x-type": "string"
          },
          "quadraKills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "riotIdName": {
            "type": "string",
            "x-type": "string",
            "description": "Replaced by `riotIdGameName` in games played in patch 14.5 and after."
          },
          "riotIdGameName": {
            "type": "string",
            "x-type": "string",
            "description": "Use `riotIdName` for games before patch 14.5."
          },
          "riotIdTagline": {
            "type": "string",
            "x-type": "string"
          },
          "role": {
            "type": "string",
            "x-type": "string"
          },
          "sightWardsBoughtInGame": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "spell1Casts": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "spell2Casts": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "spell3Casts": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "spell4Casts": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "summoner1Casts": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "summoner1Id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "summoner2Casts": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "summoner2Id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "summonerId": {
            "type": "string",
            "x-type": "string"
          },
          "summonerLevel": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "summonerName": {
            "type": "string",
            "x-type": "string"
          },
          "teamEarlySurrendered": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "teamId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-enum": "team"
          },
          "teamPosition": {
            "type": "string",
            "x-type": "string",
            "description": "Both individualPosition and teamPosition are computed by the game server and are different versions of the most likely position played by a player. The individualPosition is the best guess for which position the player actually played in isolation of anything else. The teamPosition is the best guess for which position the player actually played if we add the constraint that each team must have one top player, one jungle, one middle, etc. Generally the recommendation is to use the teamPosition field over the individualPosition field."
          },
          "timeCCingOthers": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "timePlayed": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalDamageDealt": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalDamageDealtToChampions": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalDamageShieldedOnTeammates": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalDamageTaken": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalHeal": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalHealsOnTeammates": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalMinionsKilled": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalTimeCCDealt": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalTimeSpentDead": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalUnitsHealed": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "tripleKills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "trueDamageDealt": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "trueDamageDealtToChampions": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "trueDamageTaken": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "turretKills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "turretTakedowns": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "turretsLost": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "unrealKills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "visionScore": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "visionWardsBoughtInGame": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "wardsKilled": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "wardsPlaced": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "win": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "allInPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "assistMePings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "baitPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "basicPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "commandPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "dangerPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "enemyMissingPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "enemyVisionPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "getBackPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "holdPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "needVisionPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "onMyWayPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "pushPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "visionClearedPings": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "eligibleForProgression": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "challenges": {
            "$ref": "#/components/schemas/match-v5.ParticipantChallenges",
            "x-type": "ParticipantChallenges"
          },
          "totalAllyJungleMinionsKilled": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "totalEnemyJungleMinionsKilled": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerAugment1": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerAugment2": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerAugment3": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerAugment4": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerSubteamId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "subteamPlacement": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "placement": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "missions": {
            "$ref": "#/components/schemas/match-v5.ParticipantMissions",
            "x-type": "ParticipantMissions"
          },
          "playerScore0": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerScore1": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerScore10": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerScore11": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerScore2": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerScore3": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerScore4": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerScore5": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerScore6": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerScore7": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerScore8": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerScore9": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "assists",
          "baronKills",
          "bountyLevel",
          "champExperience",
          "champLevel",
          "championId",
          "championName",
          "championTransform",
          "consumablesPurchased",
          "damageDealtToObjectives",
          "damageDealtToTurrets",
          "damageSelfMitigated",
          "deaths",
          "detectorWardsPlaced",
          "doubleKills",
          "dragonKills",
          "firstBloodAssist",
          "firstBloodKill",
          "firstTowerAssist",
          "firstTowerKill",
          "gameEndedInEarlySurrender",
          "gameEndedInSurrender",
          "goldEarned",
          "goldSpent",
          "individualPosition",
          "inhibitorKills",
          "item0",
          "item1",
          "item2",
          "item3",
          "item4",
          "item5",
          "item6",
          "itemsPurchased",
          "killingSprees",
          "kills",
          "lane",
          "largestCriticalStrike",
          "largestKillingSpree",
          "largestMultiKill",
          "longestTimeSpentLiving",
          "magicDamageDealt",
          "magicDamageDealtToChampions",
          "magicDamageTaken",
          "neutralMinionsKilled",
          "nexusKills",
          "objectivesStolen",
          "objectivesStolenAssists",
          "participantId",
          "pentaKills",
          "perks",
          "physicalDamageDealt",
          "physicalDamageDealtToChampions",
          "physicalDamageTaken",
          "profileIcon",
          "puuid",
          "quadraKills",
          "riotIdTagline",
          "role",
          "sightWardsBoughtInGame",
          "spell1Casts",
          "spell2Casts",
          "spell3Casts",
          "spell4Casts",
          "summoner1Casts",
          "summoner1Id",
          "summoner2Casts",
          "summoner2Id",
          "summonerId",
          "summonerLevel",
          "summonerName",
          "teamEarlySurrendered",
          "teamId",
          "teamPosition",
          "timeCCingOthers",
          "timePlayed",
          "totalDamageDealt",
          "totalDamageDealtToChampions",
          "totalDamageShieldedOnTeammates",
          "totalDamageTaken",
          "totalHeal",
          "totalHealsOnTeammates",
          "totalMinionsKilled",
          "totalTimeCCDealt",
          "totalTimeSpentDead",
          "totalUnitsHealed",
          "tripleKills",
          "trueDamageDealt",
          "trueDamageDealtToChampions",
          "trueDamageTaken",
          "turretKills",
          "unrealKills",
          "visionScore",
          "visionWardsBoughtInGame",
          "wardsKilled",
          "wardsPlaced",
          "win"
        ]
      },
      "match-v5.PerksDto": {
        "type": "object",
        "title": "PerksDto",
        "properties": {
          "statPerks": {
            "$ref": "#/components/schemas/match-v5.PerkStatsDto",
            "x-type": "PerkStatsDto"
          },
          "styles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/match-v5.PerkStyleDto",
              "x-type": "PerkStyleDto"
            },
            "x-type": "List[PerkStyleDto]"
          }
        },
        "required": [
          "statPerks",
          "styles"
        ]
      },
      "match-v5.PerkStatsDto": {
        "type": "object",
        "title": "PerkStatsDto",
        "properties": {
          "defense": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "flex": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "offense": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "defense",
          "flex",
          "offense"
        ]
      },
      "match-v5.PerkStyleDto": {
        "type": "object",
        "title": "PerkStyleDto",
        "properties": {
          "description": {
            "type": "string",
            "x-type": "string"
          },
          "selections": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/match-v5.PerkStyleSelectionDto",
              "x-type": "PerkStyleSelectionDto"
            },
            "x-type": "List[PerkStyleSelectionDto]"
          },
          "style": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "description",
          "selections",
          "style"
        ]
      },
      "match-v5.PerkStyleSelectionDto": {
        "type": "object",
        "title": "PerkStyleSelectionDto",
        "properties": {
          "perk": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "var1": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "var2": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "var3": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "perk",
          "var1",
          "var2",
          "var3"
        ]
      },
      "match-v5.TeamDto": {
        "type": "object",
        "title": "TeamDto",
        "properties": {
          "bans": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/match-v5.BanDto",
              "x-type": "BanDto"
            },
            "x-type": "List[BanDto]"
          },
          "objectives": {
            "$ref": "#/components/schemas/match-v5.ObjectivesDto",
            "x-type": "ObjectivesDto"
          },
          "teamId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-enum": "team"
          },
          "win": {
            "type": "boolean",
            "x-type": "boolean"
          }
        },
        "required": [
          "bans",
          "objectives",
          "teamId",
          "win"
        ]
      },
      "match-v5.BanDto": {
        "type": "object",
        "title": "BanDto",
        "properties": {
          "championId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-enum": "champion"
          },
          "pickTurn": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "championId",
          "pickTurn"
        ]
      },
      "match-v5.ObjectivesDto": {
        "type": "object",
        "title": "ObjectivesDto",
        "properties": {
          "baron": {
            "$ref": "#/components/schemas/match-v5.ObjectiveDto",
            "x-type": "ObjectiveDto"
          },
          "champion": {
            "$ref": "#/components/schemas/match-v5.ObjectiveDto",
            "x-type": "ObjectiveDto"
          },
          "dragon": {
            "$ref": "#/components/schemas/match-v5.ObjectiveDto",
            "x-type": "ObjectiveDto"
          },
          "inhibitor": {
            "$ref": "#/components/schemas/match-v5.ObjectiveDto",
            "x-type": "ObjectiveDto"
          },
          "riftHerald": {
            "$ref": "#/components/schemas/match-v5.ObjectiveDto",
            "x-type": "ObjectiveDto"
          },
          "tower": {
            "$ref": "#/components/schemas/match-v5.ObjectiveDto",
            "x-type": "ObjectiveDto"
          },
          "horde": {
            "$ref": "#/components/schemas/match-v5.ObjectiveDto",
            "x-type": "ObjectiveDto"
          }
        },
        "required": [
          "baron",
          "champion",
          "dragon",
          "inhibitor",
          "riftHerald",
          "tower"
        ]
      },
      "match-v5.ObjectiveDto": {
        "type": "object",
        "title": "ObjectiveDto",
        "properties": {
          "first": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "kills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "first",
          "kills"
        ]
      },
      "match-v5.MatchTimelineDto": {
        "title": "MatchTimelineDto",
        "type": "object",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/match-v5.MetadataDto"
          },
          "info": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfo"
          }
        },
        "required": [
          "metadata",
          "info"
        ]
      },
      "spectator-tft-v5.CurrentGameInfo": {
        "type": "object",
        "title": "CurrentGameInfo",
        "properties": {
          "gameId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the game"
          },
          "gameType": {
            "type": "string",
            "x-type": "string",
            "description": "The game type",
            "x-enum": "gameType"
          },
          "gameStartTime": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The game start time represented in epoch milliseconds"
          },
          "mapId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the map",
            "x-enum": "map"
          },
          "gameLength": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The amount of time in seconds that has passed since the game started"
          },
          "platformId": {
            "type": "string",
            "x-type": "string",
            "description": "The ID of the platform on which the game is being played"
          },
          "gameMode": {
            "type": "string",
            "x-type": "string",
            "description": "The game mode",
            "x-enum": "gameMode"
          },
          "bannedChampions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-tft-v5.BannedChampion",
              "x-type": "BannedChampion"
            },
            "x-type": "List[BannedChampion]",
            "description": "Banned champion information"
          },
          "gameQueueConfigId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The queue type (queue types are documented on the Game Constants page)",
            "x-enum": "queue"
          },
          "observers": {
            "$ref": "#/components/schemas/spectator-tft-v5.Observer",
            "x-type": "Observer",
            "description": "The observer information"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-tft-v5.CurrentGameParticipant",
              "x-type": "CurrentGameParticipant"
            },
            "x-type": "List[CurrentGameParticipant]",
            "description": "The participant information"
          }
        },
        "required": [
          "gameId",
          "gameType",
          "gameStartTime",
          "mapId",
          "gameLength",
          "platformId",
          "gameMode",
          "bannedChampions",
          "observers",
          "participants"
        ]
      },
      "spectator-tft-v5.BannedChampion": {
        "type": "object",
        "title": "BannedChampion",
        "properties": {
          "pickTurn": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The turn during which the champion was banned"
          },
          "championId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the banned champion",
            "x-enum": "champion"
          },
          "teamId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the team that banned the champion",
            "x-enum": "team"
          }
        },
        "required": [
          "pickTurn",
          "championId",
          "teamId"
        ]
      },
      "spectator-tft-v5.Observer": {
        "type": "object",
        "title": "Observer",
        "properties": {
          "encryptionKey": {
            "type": "string",
            "x-type": "string",
            "description": "Key used to decrypt the spectator grid game data for playback"
          }
        },
        "required": [
          "encryptionKey"
        ]
      },
      "spectator-tft-v5.CurrentGameParticipant": {
        "type": "object",
        "title": "CurrentGameParticipant",
        "properties": {
          "championId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the champion played by this participant",
            "x-enum": "champion"
          },
          "perks": {
            "$ref": "#/components/schemas/spectator-v5.Perks",
            "x-type": "Perks",
            "description": "Perks/Runes Reforged Information"
          },
          "profileIconId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the profile icon used by this participant"
          },
          "teamId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The team ID of this participant, indicating the participant's team",
            "x-enum": "team"
          },
          "summonerName": {
            "type": "string",
            "x-type": "string",
            "description": "The summoner name of this participant"
          },
          "summonerId": {
            "type": "string",
            "x-type": "string",
            "description": "The encrypted summoner ID of this participant"
          },
          "puuid": {
            "type": "string",
            "x-type": "string",
            "description": "The encrypted puuid of this participant"
          },
          "spell1Id": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the first summoner spell used by this participant"
          },
          "spell2Id": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the second summoner spell used by this participant"
          },
          "gameCustomizationObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-v5.GameCustomizationObject",
              "x-type": "GameCustomizationObject"
            },
            "x-type": "List[GameCustomizationObject]",
            "description": "List of Game Customizations"
          },
          "riotId": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "championId",
          "profileIconId",
          "teamId",
          "summonerName",
          "summonerId",
          "spell1Id",
          "spell2Id",
          "gameCustomizationObjects"
        ]
      },
      "spectator-tft-v5.Perks": {
        "type": "object",
        "title": "Perks",
        "properties": {
          "perkIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            },
            "x-type": "List[long]",
            "description": "IDs of the perks/runes assigned."
          },
          "perkStyle": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Primary runes path"
          },
          "perkSubStyle": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Secondary runes path"
          }
        },
        "required": [
          "perkIds",
          "perkStyle",
          "perkSubStyle"
        ]
      },
      "spectator-tft-v5.GameCustomizationObject": {
        "type": "object",
        "title": "GameCustomizationObject",
        "properties": {
          "category": {
            "type": "string",
            "x-type": "string",
            "description": "Category identifier for Game Customization"
          },
          "content": {
            "type": "string",
            "x-type": "string",
            "description": "Game Customization content"
          }
        },
        "required": [
          "category",
          "content"
        ]
      },
      "spectator-tft-v5.FeaturedGames": {
        "type": "object",
        "title": "FeaturedGames",
        "properties": {
          "gameList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-tft-v5.FeaturedGameInfo",
              "x-type": "FeaturedGameInfo"
            },
            "x-type": "List[FeaturedGameInfo]",
            "description": "The list of featured games"
          },
          "clientRefreshInterval": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The suggested interval to wait before requesting FeaturedGames again"
          }
        },
        "required": [
          "gameList"
        ]
      },
      "spectator-tft-v5.FeaturedGameInfo": {
        "type": "object",
        "title": "FeaturedGameInfo",
        "properties": {
          "gameMode": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "TFT"
            ],
            "description": "The game mode\n             (Legal values:  TFT)",
            "x-enum": "gameMode"
          },
          "gameLength": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The amount of time in seconds that has passed since the game started"
          },
          "mapId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the map",
            "x-enum": "map"
          },
          "gameType": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "MATCHED"
            ],
            "description": "The game type\n             (Legal values:  MATCHED)",
            "x-enum": "gameType"
          },
          "bannedChampions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-tft-v5.BannedChampion",
              "x-type": "BannedChampion"
            },
            "x-type": "List[BannedChampion]",
            "description": "Banned champion information"
          },
          "gameId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the game"
          },
          "observers": {
            "$ref": "#/components/schemas/spectator-tft-v5.Observer",
            "x-type": "Observer",
            "description": "The observer information"
          },
          "gameQueueConfigId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The queue type (queue types are documented on the Game Constants page)",
            "x-enum": "queue"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-tft-v5.Participant",
              "x-type": "Participant"
            },
            "x-type": "List[Participant]",
            "description": "The participant information"
          },
          "platformId": {
            "type": "string",
            "x-type": "string",
            "description": "The ID of the platform on which the game is being played"
          }
        },
        "required": [
          "gameMode",
          "gameLength",
          "mapId",
          "gameType",
          "bannedChampions",
          "gameId",
          "observers",
          "gameQueueConfigId",
          "participants",
          "platformId"
        ]
      },
      "spectator-tft-v5.Participant": {
        "type": "object",
        "title": "Participant",
        "properties": {
          "spell2Id": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the second summoner spell used by this participant"
          },
          "profileIconId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the profile icon used by this participant"
          },
          "summonerName": {
            "type": "string",
            "x-type": "string",
            "description": "The summoner name of this participant"
          },
          "summonerId": {
            "type": "string",
            "x-type": "string",
            "description": "Encrypted summoner ID of this participant"
          },
          "puuid": {
            "type": "string",
            "x-type": "string",
            "description": "Encrypted puuid of this participant"
          },
          "championId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the champion played by this participant",
            "x-enum": "champion"
          },
          "teamId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The team ID of this participant, indicating the participant's team",
            "x-enum": "team"
          },
          "spell1Id": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the first summoner spell used by this participant"
          },
          "riotId": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "spell2Id",
          "profileIconId",
          "summonerName",
          "championId",
          "teamId",
          "spell1Id"
        ]
      },
      "spectator-v5.CurrentGameInfo": {
        "type": "object",
        "title": "CurrentGameInfo",
        "properties": {
          "gameId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the game"
          },
          "gameType": {
            "type": "string",
            "x-type": "string",
            "description": "The game type",
            "x-enum": "gameType"
          },
          "gameStartTime": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The game start time represented in epoch milliseconds"
          },
          "mapId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the map",
            "x-enum": "map"
          },
          "gameLength": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The amount of time in seconds that has passed since the game started"
          },
          "platformId": {
            "type": "string",
            "x-type": "string",
            "description": "The ID of the platform on which the game is being played"
          },
          "gameMode": {
            "type": "string",
            "x-type": "string",
            "description": "The game mode",
            "x-enum": "gameMode"
          },
          "bannedChampions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-v5.BannedChampion",
              "x-type": "BannedChampion"
            },
            "x-type": "List[BannedChampion]",
            "description": "Banned champion information"
          },
          "gameQueueConfigId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The queue type (queue types are documented on the Game Constants page)",
            "x-enum": "queue"
          },
          "observers": {
            "$ref": "#/components/schemas/spectator-v5.Observer",
            "x-type": "Observer",
            "description": "The observer information"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-v5.CurrentGameParticipant",
              "x-type": "CurrentGameParticipant"
            },
            "x-type": "List[CurrentGameParticipant]",
            "description": "The participant information"
          }
        },
        "required": [
          "gameId",
          "gameType",
          "gameStartTime",
          "mapId",
          "gameLength",
          "platformId",
          "gameMode",
          "bannedChampions",
          "observers",
          "participants"
        ]
      },
      "spectator-v5.BannedChampion": {
        "type": "object",
        "title": "BannedChampion",
        "properties": {
          "pickTurn": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The turn during which the champion was banned"
          },
          "championId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the banned champion",
            "x-enum": "champion"
          },
          "teamId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the team that banned the champion",
            "x-enum": "team"
          }
        },
        "required": [
          "pickTurn",
          "championId",
          "teamId"
        ]
      },
      "spectator-v5.Observer": {
        "type": "object",
        "title": "Observer",
        "properties": {
          "encryptionKey": {
            "type": "string",
            "x-type": "string",
            "description": "Key used to decrypt the spectator grid game data for playback"
          }
        },
        "required": [
          "encryptionKey"
        ]
      },
      "spectator-v5.CurrentGameParticipant": {
        "type": "object",
        "title": "CurrentGameParticipant",
        "properties": {
          "championId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the champion played by this participant",
            "x-enum": "champion"
          },
          "perks": {
            "$ref": "#/components/schemas/spectator-v5.Perks",
            "x-type": "Perks",
            "description": "Perks/Runes Reforged Information"
          },
          "profileIconId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the profile icon used by this participant"
          },
          "bot": {
            "type": "boolean",
            "x-type": "boolean",
            "description": "Flag indicating whether or not this participant is a bot"
          },
          "teamId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The team ID of this participant, indicating the participant's team",
            "x-enum": "team"
          },
          "summonerName": {
            "type": "string",
            "x-type": "string",
            "description": "The summoner name of this participant"
          },
          "summonerId": {
            "type": "string",
            "x-type": "string",
            "description": "The encrypted summoner ID of this participant"
          },
          "puuid": {
            "type": "string",
            "x-type": "string",
            "description": "The encrypted puuid of this participant"
          },
          "spell1Id": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the first summoner spell used by this participant"
          },
          "spell2Id": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the second summoner spell used by this participant"
          },
          "gameCustomizationObjects": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-v5.GameCustomizationObject",
              "x-type": "GameCustomizationObject"
            },
            "x-type": "List[GameCustomizationObject]",
            "description": "List of Game Customizations"
          },
          "riotId": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "championId",
          "profileIconId",
          "bot",
          "teamId",
          "summonerName",
          "summonerId",
          "spell1Id",
          "spell2Id",
          "gameCustomizationObjects"
        ]
      },
      "spectator-v5.Perks": {
        "type": "object",
        "title": "Perks",
        "properties": {
          "perkIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            },
            "x-type": "List[long]",
            "description": "IDs of the perks/runes assigned."
          },
          "perkStyle": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Primary runes path"
          },
          "perkSubStyle": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Secondary runes path"
          }
        },
        "required": [
          "perkIds",
          "perkStyle",
          "perkSubStyle"
        ]
      },
      "spectator-v5.GameCustomizationObject": {
        "type": "object",
        "title": "GameCustomizationObject",
        "properties": {
          "category": {
            "type": "string",
            "x-type": "string",
            "description": "Category identifier for Game Customization"
          },
          "content": {
            "type": "string",
            "x-type": "string",
            "description": "Game Customization content"
          }
        },
        "required": [
          "category",
          "content"
        ]
      },
      "spectator-v5.FeaturedGames": {
        "type": "object",
        "title": "FeaturedGames",
        "properties": {
          "gameList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-v5.FeaturedGameInfo",
              "x-type": "FeaturedGameInfo"
            },
            "x-type": "List[FeaturedGameInfo]",
            "description": "The list of featured games"
          },
          "clientRefreshInterval": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The suggested interval to wait before requesting FeaturedGames again"
          }
        },
        "required": [
          "gameList"
        ]
      },
      "spectator-v5.FeaturedGameInfo": {
        "type": "object",
        "title": "FeaturedGameInfo",
        "properties": {
          "gameMode": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "CLASSIC",
              "ODIN",
              "ARAM",
              "TUTORIAL",
              "ONEFORALL",
              "ASCENSION",
              "FIRSTBLOOD",
              "KINGPORO"
            ],
            "description": "The game mode\n             (Legal values:  CLASSIC,  ODIN,  ARAM,  TUTORIAL,  ONEFORALL,  ASCENSION,  FIRSTBLOOD,  KINGPORO)",
            "x-enum": "gameMode"
          },
          "gameLength": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The amount of time in seconds that has passed since the game started"
          },
          "mapId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the map",
            "x-enum": "map"
          },
          "gameType": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "CUSTOM_GAME",
              "MATCHED_GAME",
              "TUTORIAL_GAME"
            ],
            "description": "The game type\n             (Legal values:  CUSTOM_GAME,  MATCHED_GAME,  TUTORIAL_GAME)",
            "x-enum": "gameType"
          },
          "bannedChampions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-v5.BannedChampion",
              "x-type": "BannedChampion"
            },
            "x-type": "List[BannedChampion]",
            "description": "Banned champion information"
          },
          "gameId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the game"
          },
          "observers": {
            "$ref": "#/components/schemas/spectator-v5.Observer",
            "x-type": "Observer",
            "description": "The observer information"
          },
          "gameQueueConfigId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The queue type (queue types are documented on the Game Constants page)",
            "x-enum": "queue"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/spectator-v5.Participant",
              "x-type": "Participant"
            },
            "x-type": "List[Participant]",
            "description": "The participant information"
          },
          "platformId": {
            "type": "string",
            "x-type": "string",
            "description": "The ID of the platform on which the game is being played"
          }
        },
        "required": [
          "gameMode",
          "gameLength",
          "mapId",
          "gameType",
          "bannedChampions",
          "gameId",
          "observers",
          "gameQueueConfigId",
          "participants",
          "platformId"
        ]
      },
      "spectator-v5.Participant": {
        "type": "object",
        "title": "Participant",
        "properties": {
          "bot": {
            "type": "boolean",
            "x-type": "boolean",
            "description": "Flag indicating whether or not this participant is a bot"
          },
          "spell2Id": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the second summoner spell used by this participant"
          },
          "profileIconId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the profile icon used by this participant"
          },
          "summonerName": {
            "type": "string",
            "x-type": "string",
            "description": "The summoner name of this participant"
          },
          "summonerId": {
            "type": "string",
            "x-type": "string",
            "description": "Encrypted summoner ID of this participant"
          },
          "puuid": {
            "type": "string",
            "x-type": "string",
            "description": "Encrypted puuid of this participant"
          },
          "championId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the champion played by this participant",
            "x-enum": "champion"
          },
          "teamId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The team ID of this participant, indicating the participant's team",
            "x-enum": "team"
          },
          "spell1Id": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The ID of the first summoner spell used by this participant"
          },
          "riotId": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "bot",
          "spell2Id",
          "profileIconId",
          "summonerName",
          "championId",
          "teamId",
          "spell1Id"
        ]
      },
      "summoner-v4.SummonerDTO": {
        "title": "SummonerDTO",
        "type": "object",
        "description": "represents a summoner",
        "properties": {
          "accountId": {
            "type": "string",
            "x-type": "string",
            "description": "Encrypted account ID. Max length 56 characters."
          },
          "profileIconId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "ID of the summoner icon associated with the summoner."
          },
          "revisionDate": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Date summoner was last modified specified as epoch milliseconds. The following events will update this timestamp: profile icon change, playing the tutorial or advanced tutorial, finishing a game, summoner name change"
          },
          "name": {
            "type": "string",
            "x-type": "string",
            "description": "Summoner name."
          },
          "id": {
            "type": "string",
            "x-type": "string",
            "description": "Encrypted summoner ID. Max length 63 characters."
          },
          "puuid": {
            "type": "string",
            "x-type": "string",
            "description": "Encrypted PUUID. Exact length of 78 characters."
          },
          "summonerLevel": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Summoner level associated with the summoner."
          }
        },
        "required": [
          "accountId",
          "profileIconId",
          "revisionDate",
          "name",
          "id",
          "puuid",
          "summonerLevel"
        ]
      },
      "tft-league-v1.LeagueListDTO": {
        "type": "object",
        "title": "LeagueListDTO",
        "properties": {
          "leagueId": {
            "type": "string",
            "x-type": "string"
          },
          "entries": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tft-league-v1.LeagueItemDTO",
              "x-type": "LeagueItemDTO"
            },
            "x-type": "List[LeagueItemDTO]"
          },
          "tier": {
            "type": "string",
            "x-type": "string",
            "x-enum": "tier"
          },
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "queue": {
            "type": "string",
            "x-type": "string",
            "x-enum": "queueType"
          }
        },
        "required": [
          "entries",
          "tier"
        ]
      },
      "tft-league-v1.LeagueItemDTO": {
        "type": "object",
        "title": "LeagueItemDTO",
        "properties": {
          "freshBlood": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "wins": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "First placement."
          },
          "summonerName": {
            "type": "string",
            "x-type": "string"
          },
          "miniSeries": {
            "$ref": "#/components/schemas/tft-league-v1.MiniSeriesDTO",
            "x-type": "MiniSeriesDTO"
          },
          "inactive": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "veteran": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "hotStreak": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "rank": {
            "type": "string",
            "x-type": "string",
            "x-enum": "division"
          },
          "leaguePoints": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "losses": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Second through eighth placement."
          },
          "summonerId": {
            "type": "string",
            "x-type": "string",
            "description": "Player's encrypted summonerId."
          }
        },
        "required": [
          "freshBlood",
          "wins",
          "summonerName",
          "inactive",
          "veteran",
          "hotStreak",
          "rank",
          "leaguePoints",
          "losses",
          "summonerId"
        ]
      },
      "tft-league-v1.MiniSeriesDTO": {
        "type": "object",
        "title": "MiniSeriesDTO",
        "properties": {
          "losses": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "progress": {
            "type": "string",
            "x-type": "string"
          },
          "target": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "wins": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "losses",
          "progress",
          "target",
          "wins"
        ]
      },
      "tft-league-v1.LeagueEntryDTO": {
        "type": "object",
        "title": "LeagueEntryDTO",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string",
            "description": "Player Universal Unique Identifier. Exact length of 78 characters. (Encrypted)"
          },
          "leagueId": {
            "type": "string",
            "x-type": "string",
            "description": "Not included for the RANKED_TFT_TURBO queueType."
          },
          "summonerId": {
            "type": "string",
            "x-type": "string",
            "description": "Player's encrypted summonerId."
          },
          "summonerName": {
            "type": "string",
            "x-type": "string"
          },
          "queueType": {
            "type": "string",
            "x-type": "string",
            "x-enum": "queueType"
          },
          "ratedTier": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "ORANGE",
              "PURPLE",
              "BLUE",
              "GREEN",
              "GRAY"
            ],
            "description": "Only included for the RANKED_TFT_TURBO queueType.\n             (Legal values:  ORANGE,  PURPLE,  BLUE,  GREEN,  GRAY)"
          },
          "ratedRating": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Only included for the RANKED_TFT_TURBO queueType."
          },
          "tier": {
            "type": "string",
            "x-type": "string",
            "description": "Not included for the RANKED_TFT_TURBO queueType.",
            "x-enum": "tier"
          },
          "rank": {
            "type": "string",
            "x-type": "string",
            "description": "The player's division within a tier. Not included for the RANKED_TFT_TURBO queueType.",
            "x-enum": "division"
          },
          "leaguePoints": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Not included for the RANKED_TFT_TURBO queueType."
          },
          "wins": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "First placement."
          },
          "losses": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Second through eighth placement."
          },
          "hotStreak": {
            "type": "boolean",
            "x-type": "boolean",
            "description": "Not included for the RANKED_TFT_TURBO queueType."
          },
          "veteran": {
            "type": "boolean",
            "x-type": "boolean",
            "description": "Not included for the RANKED_TFT_TURBO queueType."
          },
          "freshBlood": {
            "type": "boolean",
            "x-type": "boolean",
            "description": "Not included for the RANKED_TFT_TURBO queueType."
          },
          "inactive": {
            "type": "boolean",
            "x-type": "boolean",
            "description": "Not included for the RANKED_TFT_TURBO queueType."
          },
          "miniSeries": {
            "$ref": "#/components/schemas/tft-league-v1.MiniSeriesDTO",
            "x-type": "MiniSeriesDTO",
            "description": "Not included for the RANKED_TFT_TURBO queueType."
          }
        },
        "required": [
          "summonerId",
          "summonerName",
          "queueType",
          "wins",
          "losses"
        ]
      },
      "tft-league-v1.TopRatedLadderEntryDto": {
        "type": "object",
        "title": "TopRatedLadderEntryDto",
        "properties": {
          "summonerId": {
            "type": "string",
            "x-type": "string"
          },
          "summonerName": {
            "type": "string",
            "x-type": "string"
          },
          "ratedTier": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "ORANGE",
              "PURPLE",
              "BLUE",
              "GREEN",
              "GRAY"
            ],
            "description": "(Legal values:  ORANGE,  PURPLE,  BLUE,  GREEN,  GRAY)"
          },
          "ratedRating": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "wins": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "First placement."
          },
          "previousUpdateLadderPosition": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "summonerId",
          "summonerName",
          "ratedTier",
          "ratedRating",
          "wins",
          "previousUpdateLadderPosition"
        ]
      },
      "tft-match-v1.MatchDto": {
        "type": "object",
        "title": "MatchDto",
        "properties": {
          "metadata": {
            "$ref": "#/components/schemas/tft-match-v1.MetadataDto",
            "x-type": "MetadataDto",
            "description": "Match metadata."
          },
          "info": {
            "$ref": "#/components/schemas/tft-match-v1.InfoDto",
            "x-type": "InfoDto",
            "description": "Match info."
          }
        },
        "required": [
          "metadata",
          "info"
        ]
      },
      "tft-match-v1.MetadataDto": {
        "type": "object",
        "title": "MetadataDto",
        "properties": {
          "data_version": {
            "type": "string",
            "x-type": "string",
            "description": "Match data version."
          },
          "match_id": {
            "type": "string",
            "x-type": "string",
            "description": "Match id."
          },
          "participants": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "List[string]",
            "description": "A list of participant PUUIDs."
          }
        },
        "required": [
          "data_version",
          "match_id",
          "participants"
        ]
      },
      "tft-match-v1.InfoDto": {
        "type": "object",
        "title": "InfoDto",
        "properties": {
          "tft_game_type": {
            "type": "string",
            "x-type": "string"
          },
          "tft_set_core_name": {
            "type": "string",
            "x-type": "string"
          },
          "game_datetime": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Unix timestamp."
          },
          "game_length": {
            "type": "number",
            "format": "float",
            "x-type": "float",
            "description": "Game length in seconds."
          },
          "game_variation": {
            "type": "string",
            "x-type": "string",
            "description": "Game variation key. Game variations documented in TFT static data."
          },
          "game_version": {
            "type": "string",
            "x-type": "string",
            "description": "Game client version."
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tft-match-v1.ParticipantDto",
              "x-type": "ParticipantDto"
            },
            "x-type": "List[ParticipantDto]"
          },
          "queue_id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Please refer to the League of Legends documentation.",
            "x-enum": "queue"
          },
          "tft_set_number": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Teamfight Tactics set number."
          },
          "endOfGameResult": {
            "type": "string"
          },
          "gameCreation": {
            "type": "integer",
            "format": "int64"
          },
          "gameId": {
            "type": "integer",
            "format": "int64"
          },
          "mapId": {
            "type": "integer",
            "format": "int64"
          },
          "queueId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Please refer to the League of Legends documentation.",
            "x-enum": "queue"
          }
        },
        "required": [
          "game_datetime",
          "game_length",
          "game_version",
          "participants",
          "queue_id",
          "tft_set_number"
        ]
      },
      "tft-match-v1.ParticipantDto": {
        "type": "object",
        "title": "ParticipantDto",
        "properties": {
          "augments": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "List[string]"
          },
          "partner_group_id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "companion": {
            "$ref": "#/components/schemas/tft-match-v1.CompanionDto",
            "x-type": "CompanionDto",
            "description": "Participant's companion."
          },
          "gold_left": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Gold left after participant was eliminated."
          },
          "last_round": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The round the participant was eliminated in. Note: If the player was eliminated in stage 2-1 their last_round would be 5."
          },
          "level": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Participant Little Legend level. Note: This is not the number of active units."
          },
          "placement": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Participant placement upon elimination."
          },
          "players_eliminated": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Number of players the participant eliminated."
          },
          "puuid": {
            "type": "string",
            "x-type": "string"
          },
          "time_eliminated": {
            "type": "number",
            "format": "float",
            "x-type": "float",
            "description": "The number of seconds before the participant was eliminated."
          },
          "total_damage_to_players": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Damage the participant dealt to other players."
          },
          "traits": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tft-match-v1.TraitDto",
              "x-type": "TraitDto"
            },
            "x-type": "List[TraitDto]",
            "description": "A complete list of traits for the participant's active units."
          },
          "units": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tft-match-v1.UnitDto",
              "x-type": "UnitDto"
            },
            "x-type": "List[UnitDto]",
            "description": "A list of active units for the participant."
          },
          "missions": {
            "$ref": "#/components/schemas/tft-match-v1.ParticipantMissionsDto",
            "x-type": "ParticipantMissionsDto"
          }
        },
        "required": [
          "companion",
          "gold_left",
          "last_round",
          "level",
          "placement",
          "players_eliminated",
          "puuid",
          "time_eliminated",
          "total_damage_to_players",
          "traits",
          "units"
        ]
      },
      "tft-match-v1.TraitDto": {
        "type": "object",
        "title": "TraitDto",
        "properties": {
          "name": {
            "type": "string",
            "x-type": "string",
            "description": "Trait name."
          },
          "num_units": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Number of units with this trait."
          },
          "style": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Current style for this trait. (0 = No style, 1 = Bronze, 2 = Silver, 3 = Gold, 4 = Chromatic)"
          },
          "tier_current": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Current active tier for the trait."
          },
          "tier_total": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Total tiers for the trait."
          }
        },
        "required": [
          "name",
          "num_units",
          "tier_current"
        ]
      },
      "tft-match-v1.UnitDto": {
        "type": "object",
        "title": "UnitDto",
        "properties": {
          "itemNames": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "List[string]"
          },
          "items": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "x-type": "List[int]",
            "description": "A list of the unit's items. Please refer to the Teamfight Tactics documentation for item ids."
          },
          "character_id": {
            "type": "string",
            "x-type": "string",
            "description": "This field was introduced in patch 9.22 with data_version 2."
          },
          "chosen": {
            "type": "string",
            "x-type": "string",
            "description": "If a unit is chosen as part of the Fates set mechanic, the chosen trait will be indicated by this field. Otherwise this field is excluded from the response."
          },
          "name": {
            "type": "string",
            "x-type": "string",
            "description": "Unit name. This field is often left blank."
          },
          "rarity": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Unit rarity. This doesn't equate to the unit cost."
          },
          "tier": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Unit tier."
          }
        },
        "required": [
          "character_id",
          "name",
          "rarity",
          "tier"
        ]
      },
      "tft-match-v1.CompanionDto": {
        "type": "object",
        "title": "CompanionDto",
        "properties": {
          "item_ID": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "skin_ID": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "content_ID": {
            "type": "string",
            "x-type": "string"
          },
          "species": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "skin_ID",
          "content_ID",
          "species"
        ]
      },
      "tft-status-v1.PlatformDataDto": {
        "type": "object",
        "title": "PlatformDataDto",
        "properties": {
          "id": {
            "type": "string",
            "x-type": "string"
          },
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "locales": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "List[string]"
          },
          "maintenances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tft-status-v1.StatusDto",
              "x-type": "StatusDto"
            },
            "x-type": "List[StatusDto]"
          },
          "incidents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tft-status-v1.StatusDto",
              "x-type": "StatusDto"
            },
            "x-type": "List[StatusDto]"
          }
        },
        "required": [
          "id",
          "name",
          "locales",
          "maintenances",
          "incidents"
        ]
      },
      "tft-status-v1.StatusDto": {
        "type": "object",
        "title": "StatusDto",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "maintenance_status": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "scheduled",
              "in_progress",
              "complete"
            ],
            "description": "(Legal values:  scheduled,  in_progress,  complete)"
          },
          "incident_severity": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "info",
              "warning",
              "critical"
            ],
            "description": "(Legal values:  info,  warning,  critical)"
          },
          "titles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tft-status-v1.ContentDto",
              "x-type": "ContentDto"
            },
            "x-type": "List[ContentDto]"
          },
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tft-status-v1.UpdateDto",
              "x-type": "UpdateDto"
            },
            "x-type": "List[UpdateDto]"
          },
          "created_at": {
            "type": "string",
            "x-type": "string"
          },
          "archive_at": {
            "type": "string",
            "x-type": "string"
          },
          "updated_at": {
            "type": "string",
            "x-type": "string"
          },
          "platforms": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "windows",
                "macos",
                "android",
                "ios",
                "ps4",
                "xbone",
                "switch"
              ]
            },
            "x-type": "List[string]",
            "description": "(Legal values: windows, macos, android, ios, ps4, xbone, switch)"
          }
        },
        "required": [
          "id",
          "maintenance_status",
          "incident_severity",
          "titles",
          "updates",
          "created_at",
          "archive_at",
          "updated_at",
          "platforms"
        ]
      },
      "tft-status-v1.ContentDto": {
        "type": "object",
        "title": "ContentDto",
        "properties": {
          "locale": {
            "type": "string",
            "x-type": "string"
          },
          "content": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "locale",
          "content"
        ]
      },
      "tft-status-v1.UpdateDto": {
        "type": "object",
        "title": "UpdateDto",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "author": {
            "type": "string",
            "x-type": "string"
          },
          "publish": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "publish_locations": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "riotclient",
                "riotstatus",
                "game"
              ]
            },
            "x-type": "List[string]",
            "description": "(Legal values: riotclient, riotstatus, game)"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tft-status-v1.ContentDto",
              "x-type": "ContentDto"
            },
            "x-type": "List[ContentDto]"
          },
          "created_at": {
            "type": "string",
            "x-type": "string"
          },
          "updated_at": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "id",
          "author",
          "publish",
          "publish_locations",
          "translations",
          "created_at",
          "updated_at"
        ]
      },
      "tft-summoner-v1.SummonerDTO": {
        "type": "object",
        "title": "SummonerDTO",
        "properties": {
          "accountId": {
            "type": "string",
            "x-type": "string",
            "description": "Encrypted account ID. Max length 56 characters."
          },
          "profileIconId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "ID of the summoner icon associated with the summoner."
          },
          "revisionDate": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Date summoner was last modified specified as epoch milliseconds. The following events will update this timestamp: summoner name change, summoner level change, or profile icon change."
          },
          "name": {
            "type": "string",
            "x-type": "string",
            "description": "Summoner name."
          },
          "id": {
            "type": "string",
            "x-type": "string",
            "description": "Encrypted summoner ID. Max length 63 characters."
          },
          "puuid": {
            "type": "string",
            "x-type": "string",
            "description": "Encrypted PUUID. Exact length of 78 characters."
          },
          "summonerLevel": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "Summoner level associated with the summoner."
          }
        },
        "description": "represents a summoner",
        "required": [
          "accountId",
          "profileIconId",
          "revisionDate",
          "name",
          "id",
          "puuid",
          "summonerLevel"
        ]
      },
      "tournament-stub-v5.TournamentCodeParametersV5": {
        "type": "object",
        "title": "TournamentCodeParametersV5",
        "properties": {
          "allowedParticipants": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "Set[string]",
            "description": "Optional list of encrypted puuids in order to validate the players eligible to join the lobby. NOTE: We currently do not enforce participants at the team level, but rather the aggregate of teamOne and teamTwo. We may add the ability to enforce at the team level in the future."
          },
          "metadata": {
            "type": "string",
            "x-type": "string",
            "description": "Optional string that may contain any data in any format, if specified at all. Used to denote any custom information about the game."
          },
          "teamSize": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "minimum": 1,
            "maximum": 5,
            "description": "The team size of the game. Valid values are 1-5."
          },
          "pickType": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "BLIND_PICK",
              "DRAFT_MODE",
              "ALL_RANDOM",
              "TOURNAMENT_DRAFT"
            ],
            "description": "The pick type of the game.\n             (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT)"
          },
          "mapType": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "SUMMONERS_RIFT",
              "HOWLING_ABYSS"
            ],
            "description": "The map type of the game.\n             (Legal values:  SUMMONERS_RIFT,  HOWLING_ABYSS)"
          },
          "spectatorType": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "NONE",
              "LOBBYONLY",
              "ALL"
            ],
            "description": "The spectator type of the game.\n             (Legal values:  NONE,  LOBBYONLY,  ALL)"
          },
          "enoughPlayers": {
            "type": "boolean",
            "x-type": "boolean",
            "description": "Checks if allowed participants are enough to make full teams."
          }
        },
        "required": [
          "teamSize",
          "pickType",
          "mapType",
          "spectatorType",
          "enoughPlayers"
        ]
      },
      "tournament-stub-v5.TournamentCodeV5DTO": {
        "type": "object",
        "title": "TournamentCodeV5DTO",
        "properties": {
          "code": {
            "type": "string",
            "x-type": "string",
            "description": "The tournament code."
          },
          "spectators": {
            "type": "string",
            "x-type": "string",
            "description": "The spectator mode for the tournament code game."
          },
          "lobbyName": {
            "type": "string",
            "x-type": "string",
            "description": "The lobby name for the tournament code game."
          },
          "metaData": {
            "type": "string",
            "x-type": "string",
            "description": "The metadata for tournament code."
          },
          "password": {
            "type": "string",
            "x-type": "string",
            "description": "The password for the tournament code game."
          },
          "teamSize": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The team size for the tournament code game."
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The provider's ID."
          },
          "pickType": {
            "type": "string",
            "x-type": "string",
            "description": "The pick mode for tournament code game."
          },
          "tournamentId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The tournament's ID."
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The tournament code's ID."
          },
          "region": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "BR",
              "EUNE",
              "EUW",
              "JP",
              "LAN",
              "LAS",
              "NA",
              "OCE",
              "PBE",
              "RU",
              "TR",
              "KR"
            ],
            "description": "The tournament code's region.\n             (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR)"
          },
          "map": {
            "type": "string",
            "x-type": "string",
            "description": "The game map for the tournament code game"
          },
          "participants": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "Set[string]",
            "description": "The puuids of the participants (Encrypted)"
          }
        },
        "required": [
          "code",
          "spectators",
          "lobbyName",
          "metaData",
          "password",
          "teamSize",
          "providerId",
          "pickType",
          "tournamentId",
          "id",
          "region",
          "map",
          "participants"
        ]
      },
      "tournament-stub-v5.LobbyEventV5DTOWrapper": {
        "type": "object",
        "title": "LobbyEventV5DTOWrapper",
        "properties": {
          "eventList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tournament-stub-v5.LobbyEventV5DTO",
              "x-type": "LobbyEventV5DTO"
            },
            "x-type": "List[LobbyEventV5DTO]"
          }
        },
        "required": [
          "eventList"
        ]
      },
      "tournament-stub-v5.LobbyEventV5DTO": {
        "type": "object",
        "title": "LobbyEventV5DTO",
        "properties": {
          "timestamp": {
            "type": "string",
            "x-type": "string",
            "description": "Timestamp from the event"
          },
          "eventType": {
            "type": "string",
            "x-type": "string",
            "description": "The type of event that was triggered"
          },
          "puuid": {
            "type": "string",
            "x-type": "string",
            "description": "The puuid that triggered the event (Encrypted)"
          }
        },
        "required": [
          "timestamp",
          "eventType",
          "puuid"
        ]
      },
      "tournament-stub-v5.ProviderRegistrationParametersV5": {
        "type": "object",
        "title": "ProviderRegistrationParametersV5",
        "properties": {
          "region": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "BR",
              "EUNE",
              "EUW",
              "JP",
              "LAN",
              "LAS",
              "NA",
              "OCE",
              "PBE",
              "RU",
              "TR",
              "KR"
            ],
            "description": "The region in which the provider will be running tournaments.\n             (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR)"
          },
          "url": {
            "type": "string",
            "x-type": "string",
            "description": "The provider's callback URL to which tournament game results in this region should be posted. The URL must be well-formed, use the http or https protocol, and use the default port for the protocol (http URLs must use port 80, https URLs must use port 443)."
          }
        },
        "required": [
          "region",
          "url"
        ]
      },
      "tournament-stub-v5.TournamentRegistrationParametersV5": {
        "type": "object",
        "title": "TournamentRegistrationParametersV5",
        "properties": {
          "providerId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The provider ID to specify the regional registered provider data to associate this tournament."
          },
          "name": {
            "type": "string",
            "x-type": "string",
            "description": "The optional name of the tournament."
          }
        },
        "required": [
          "providerId"
        ]
      },
      "tournament-v5.TournamentCodeParametersV5": {
        "type": "object",
        "title": "TournamentCodeParametersV5",
        "properties": {
          "allowedParticipants": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "Set[string]",
            "description": "Optional list of encrypted puuids in order to validate the players eligible to join the lobby. NOTE: We currently do not enforce participants at the team level, but rather the aggregate of teamOne and teamTwo. We may add the ability to enforce at the team level in the future."
          },
          "metadata": {
            "type": "string",
            "x-type": "string",
            "description": "Optional string that may contain any data in any format, if specified at all. Used to denote any custom information about the game."
          },
          "teamSize": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "minimum": 1,
            "maximum": 5,
            "description": "The team size of the game. Valid values are 1-5."
          },
          "pickType": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "BLIND_PICK",
              "DRAFT_MODE",
              "ALL_RANDOM",
              "TOURNAMENT_DRAFT"
            ],
            "description": "The pick type of the game.\n             (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT)"
          },
          "mapType": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "SUMMONERS_RIFT",
              "HOWLING_ABYSS"
            ],
            "description": "The map type of the game.\n             (Legal values:  SUMMONERS_RIFT,  HOWLING_ABYSS)"
          },
          "spectatorType": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "NONE",
              "LOBBYONLY",
              "ALL"
            ],
            "description": "The spectator type of the game.\n             (Legal values:  NONE,  LOBBYONLY,  ALL)"
          },
          "enoughPlayers": {
            "type": "boolean",
            "x-type": "boolean",
            "description": "Checks if allowed participants are enough to make full teams."
          }
        },
        "required": [
          "teamSize",
          "pickType",
          "mapType",
          "spectatorType",
          "enoughPlayers"
        ]
      },
      "tournament-v5.TournamentCodeV5DTO": {
        "type": "object",
        "title": "TournamentCodeV5DTO",
        "properties": {
          "code": {
            "type": "string",
            "x-type": "string",
            "description": "The tournament code."
          },
          "spectators": {
            "type": "string",
            "x-type": "string",
            "description": "The spectator mode for the tournament code game."
          },
          "lobbyName": {
            "type": "string",
            "x-type": "string",
            "description": "The lobby name for the tournament code game."
          },
          "metaData": {
            "type": "string",
            "x-type": "string",
            "description": "The metadata for tournament code."
          },
          "password": {
            "type": "string",
            "x-type": "string",
            "description": "The password for the tournament code game."
          },
          "teamSize": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The team size for the tournament code game."
          },
          "providerId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The provider's ID."
          },
          "pickType": {
            "type": "string",
            "x-type": "string",
            "description": "The pick mode for tournament code game."
          },
          "tournamentId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The tournament's ID."
          },
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The tournament code's ID."
          },
          "region": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "BR",
              "EUNE",
              "EUW",
              "JP",
              "LAN",
              "LAS",
              "NA",
              "OCE",
              "PBE",
              "RU",
              "TR",
              "KR",
              "PH",
              "SG",
              "TH",
              "TW",
              "VN"
            ],
            "description": "The tournament code's region.\n             (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR,  PH,  SG,  TH,  TW,  VN)"
          },
          "map": {
            "type": "string",
            "x-type": "string",
            "description": "The game map for the tournament code game"
          },
          "participants": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "Set[string]",
            "description": "The puuids of the participants (Encrypted)"
          }
        },
        "required": [
          "code",
          "spectators",
          "lobbyName",
          "metaData",
          "password",
          "teamSize",
          "providerId",
          "pickType",
          "tournamentId",
          "id",
          "region",
          "map",
          "participants"
        ]
      },
      "tournament-v5.TournamentCodeUpdateParametersV5": {
        "type": "object",
        "title": "TournamentCodeUpdateParametersV5",
        "properties": {
          "allowedParticipants": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "Set[string]",
            "description": "Optional list of encrypted puuids in order to validate the players eligible to join the lobby. NOTE: We currently do not enforce participants at the team level, but rather the aggregate of teamOne and teamTwo. We may add the ability to enforce at the team level in the future."
          },
          "pickType": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "BLIND_PICK",
              "DRAFT_MODE",
              "ALL_RANDOM",
              "TOURNAMENT_DRAFT"
            ],
            "description": "The pick type\n             (Legal values:  BLIND_PICK,  DRAFT_MODE,  ALL_RANDOM,  TOURNAMENT_DRAFT)"
          },
          "mapType": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "SUMMONERS_RIFT",
              "HOWLING_ABYSS"
            ],
            "description": "The map type\n             (Legal values:  SUMMONERS_RIFT,  HOWLING_ABYSS)"
          },
          "spectatorType": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "NONE",
              "LOBBYONLY",
              "ALL"
            ],
            "description": "The spectator type\n             (Legal values:  NONE,  LOBBYONLY,  ALL)"
          }
        },
        "required": [
          "pickType",
          "mapType",
          "spectatorType"
        ]
      },
      "tournament-v5.TournamentGamesV5": {
        "type": "object",
        "title": "TournamentGamesV5",
        "properties": {
          "winningTeam": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tournament-v5.TournamentTeamV5",
              "x-type": "TournamentTeamV5"
            },
            "x-type": "List[TournamentTeamV5]"
          },
          "losingTeam": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tournament-v5.TournamentTeamV5",
              "x-type": "TournamentTeamV5"
            },
            "x-type": "List[TournamentTeamV5]"
          },
          "shortCode": {
            "type": "string",
            "x-type": "string",
            "description": "Tournament Code"
          },
          "metaData": {
            "type": "string",
            "x-type": "string",
            "description": "Metadata for the TournamentCode"
          },
          "gameId": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "gameName": {
            "type": "string",
            "x-type": "string"
          },
          "gameType": {
            "type": "string",
            "x-type": "string"
          },
          "gameMap": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Game Map ID"
          },
          "gameMode": {
            "type": "string",
            "x-type": "string"
          },
          "region": {
            "type": "string",
            "x-type": "string",
            "description": "Region of the game"
          }
        },
        "required": [
          "winningTeam",
          "losingTeam",
          "shortCode",
          "gameId",
          "gameName",
          "gameType",
          "gameMap",
          "gameMode",
          "region"
        ]
      },
      "tournament-v5.TournamentTeamV5": {
        "type": "object",
        "title": "TournamentTeamV5",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string",
            "description": "Player Unique UUID (Encrypted)"
          }
        },
        "required": [
          "puuid"
        ]
      },
      "tournament-v5.LobbyEventV5DTOWrapper": {
        "type": "object",
        "title": "LobbyEventV5DTOWrapper",
        "properties": {
          "eventList": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/tournament-v5.LobbyEventV5DTO",
              "x-type": "LobbyEventV5DTO"
            },
            "x-type": "List[LobbyEventV5DTO]"
          }
        },
        "required": [
          "eventList"
        ]
      },
      "tournament-v5.LobbyEventV5DTO": {
        "type": "object",
        "title": "LobbyEventV5DTO",
        "properties": {
          "timestamp": {
            "type": "string",
            "x-type": "string",
            "description": "Timestamp from the event"
          },
          "eventType": {
            "type": "string",
            "x-type": "string",
            "description": "The type of event that was triggered"
          },
          "puuid": {
            "type": "string",
            "x-type": "string",
            "description": "The puuid that triggered the event (Encrypted)"
          }
        },
        "required": [
          "timestamp",
          "eventType",
          "puuid"
        ]
      },
      "tournament-v5.ProviderRegistrationParametersV5": {
        "type": "object",
        "title": "ProviderRegistrationParametersV5",
        "properties": {
          "region": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "BR",
              "EUNE",
              "EUW",
              "JP",
              "LAN",
              "LAS",
              "NA",
              "OCE",
              "PBE",
              "RU",
              "TR",
              "KR",
              "PH",
              "SG",
              "TH",
              "TW",
              "VN"
            ],
            "description": "The region in which the provider will be running tournaments.\n             (Legal values:  BR,  EUNE,  EUW,  JP,  LAN,  LAS,  NA,  OCE,  PBE,  RU,  TR,  KR,  PH,  SG,  TH,  TW,  VN)"
          },
          "url": {
            "type": "string",
            "x-type": "string",
            "description": "The provider's callback URL to which tournament game results in this region should be posted. The URL must be well-formed, use the http or https protocol, and use the default port for the protocol (http URLs must use port 80, https URLs must use port 443)."
          }
        },
        "required": [
          "region",
          "url"
        ]
      },
      "tournament-v5.TournamentRegistrationParametersV5": {
        "type": "object",
        "title": "TournamentRegistrationParametersV5",
        "properties": {
          "providerId": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "The provider ID to specify the regional registered provider data to associate this tournament."
          },
          "name": {
            "type": "string",
            "x-type": "string",
            "description": "The optional name of the tournament."
          }
        },
        "required": [
          "providerId"
        ]
      },
      "val-content-v1.ContentDto": {
        "type": "object",
        "title": "ContentDto",
        "properties": {
          "version": {
            "type": "string",
            "x-type": "string"
          },
          "characters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "maps": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "chromas": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "skins": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "skinLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "equips": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "gameModes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "sprays": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "sprayLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "charms": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "charmLevels": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "playerCards": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "playerTitles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "acts": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ActDto",
              "x-type": "ActDto"
            },
            "x-type": "List[ActDto]"
          },
          "ceremonies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-content-v1.ContentItemDto",
              "x-type": "ContentItemDto"
            },
            "x-type": "List[ContentItemDto]"
          },
          "totems": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "description": "Unknown type, this is a placeholder subject to change.",
            "x-type": "List[string]"
          }
        },
        "required": [
          "version",
          "characters",
          "maps",
          "chromas",
          "skins",
          "skinLevels",
          "equips",
          "gameModes",
          "sprays",
          "sprayLevels",
          "charms",
          "charmLevels",
          "playerCards",
          "playerTitles",
          "acts"
        ]
      },
      "val-content-v1.ContentItemDto": {
        "type": "object",
        "title": "ContentItemDto",
        "properties": {
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "localizedNames": {
            "$ref": "#/components/schemas/val-content-v1.LocalizedNamesDto",
            "x-type": "LocalizedNamesDto",
            "description": "This field is excluded from the response when a locale is set"
          },
          "id": {
            "type": "string",
            "x-type": "string"
          },
          "assetName": {
            "type": "string",
            "x-type": "string"
          },
          "assetPath": {
            "type": "string",
            "x-type": "string",
            "description": "This field is only included for maps and game modes. These values are used in the match response."
          }
        },
        "required": [
          "name",
          "id",
          "assetName"
        ]
      },
      "val-content-v1.LocalizedNamesDto": {
        "type": "object",
        "title": "LocalizedNamesDto",
        "properties": {
          "ar-AE": {
            "type": "string",
            "x-type": "string"
          },
          "de-DE": {
            "type": "string",
            "x-type": "string"
          },
          "en-GB": {
            "type": "string",
            "x-type": "string"
          },
          "en-US": {
            "type": "string",
            "x-type": "string"
          },
          "es-ES": {
            "type": "string",
            "x-type": "string"
          },
          "es-MX": {
            "type": "string",
            "x-type": "string"
          },
          "fr-FR": {
            "type": "string",
            "x-type": "string"
          },
          "id-ID": {
            "type": "string",
            "x-type": "string"
          },
          "it-IT": {
            "type": "string",
            "x-type": "string"
          },
          "ja-JP": {
            "type": "string",
            "x-type": "string"
          },
          "ko-KR": {
            "type": "string",
            "x-type": "string"
          },
          "pl-PL": {
            "type": "string",
            "x-type": "string"
          },
          "pt-BR": {
            "type": "string",
            "x-type": "string"
          },
          "ru-RU": {
            "type": "string",
            "x-type": "string"
          },
          "th-TH": {
            "type": "string",
            "x-type": "string"
          },
          "tr-TR": {
            "type": "string",
            "x-type": "string"
          },
          "vi-VN": {
            "type": "string",
            "x-type": "string"
          },
          "zh-CN": {
            "type": "string",
            "x-type": "string"
          },
          "zh-TW": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "ar-AE",
          "de-DE",
          "en-US",
          "es-ES",
          "es-MX",
          "fr-FR",
          "id-ID",
          "it-IT",
          "ja-JP",
          "ko-KR",
          "pl-PL",
          "pt-BR",
          "ru-RU",
          "th-TH",
          "tr-TR",
          "vi-VN",
          "zh-CN",
          "zh-TW"
        ]
      },
      "val-content-v1.ActDto": {
        "type": "object",
        "title": "ActDto",
        "properties": {
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "localizedNames": {
            "$ref": "#/components/schemas/val-content-v1.LocalizedNamesDto",
            "x-type": "LocalizedNamesDto",
            "description": "This field is excluded from the response when a locale is set"
          },
          "id": {
            "type": "string",
            "x-type": "string"
          },
          "isActive": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "parentId": {
            "type": "string"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "name",
          "id",
          "isActive"
        ]
      },
      "val-match-v1.MatchDto": {
        "type": "object",
        "title": "MatchDto",
        "properties": {
          "matchInfo": {
            "$ref": "#/components/schemas/val-match-v1.MatchInfoDto",
            "x-type": "MatchInfoDto"
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-match-v1.PlayerDto",
              "x-type": "PlayerDto"
            },
            "x-type": "List[PlayerDto]"
          },
          "coaches": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-match-v1.CoachDto",
              "x-type": "CoachDto"
            },
            "x-type": "List[CoachDto]"
          },
          "teams": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-match-v1.TeamDto",
              "x-type": "TeamDto"
            },
            "x-type": "List[TeamDto]"
          },
          "roundResults": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-match-v1.RoundResultDto",
              "x-type": "RoundResultDto"
            },
            "x-type": "List[RoundResultDto]"
          }
        },
        "required": [
          "matchInfo",
          "players",
          "coaches",
          "teams",
          "roundResults"
        ]
      },
      "val-match-v1.MatchInfoDto": {
        "type": "object",
        "title": "MatchInfoDto",
        "properties": {
          "matchId": {
            "type": "string",
            "x-type": "string"
          },
          "mapId": {
            "type": "string",
            "x-type": "string"
          },
          "gameLengthMillis": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "gameStartMillis": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "provisioningFlowId": {
            "type": "string",
            "x-type": "string"
          },
          "isCompleted": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "customGameName": {
            "type": "string",
            "x-type": "string"
          },
          "queueId": {
            "type": "string",
            "x-type": "string"
          },
          "gameMode": {
            "type": "string",
            "x-type": "string"
          },
          "isRanked": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "seasonId": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "matchId",
          "mapId",
          "gameLengthMillis",
          "gameStartMillis",
          "provisioningFlowId",
          "isCompleted",
          "customGameName",
          "queueId",
          "gameMode",
          "isRanked",
          "seasonId"
        ]
      },
      "val-match-v1.PlayerDto": {
        "type": "object",
        "title": "PlayerDto",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string"
          },
          "gameName": {
            "type": "string",
            "x-type": "string"
          },
          "tagLine": {
            "type": "string",
            "x-type": "string"
          },
          "teamId": {
            "type": "string",
            "x-type": "string"
          },
          "partyId": {
            "type": "string",
            "x-type": "string"
          },
          "characterId": {
            "type": "string",
            "x-type": "string"
          },
          "stats": {
            "$ref": "#/components/schemas/val-match-v1.PlayerStatsDto",
            "x-type": "PlayerStatsDto"
          },
          "competitiveTier": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playerCard": {
            "type": "string",
            "x-type": "string"
          },
          "playerTitle": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "puuid",
          "gameName",
          "tagLine",
          "teamId",
          "partyId",
          "characterId",
          "stats",
          "competitiveTier",
          "playerCard",
          "playerTitle"
        ]
      },
      "val-match-v1.PlayerStatsDto": {
        "type": "object",
        "title": "PlayerStatsDto",
        "properties": {
          "score": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "roundsPlayed": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "kills": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "deaths": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "assists": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "playtimeMillis": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "abilityCasts": {
            "$ref": "#/components/schemas/val-match-v1.AbilityCastsDto",
            "x-type": "AbilityCastsDto"
          }
        },
        "required": [
          "score",
          "roundsPlayed",
          "kills",
          "deaths",
          "assists",
          "playtimeMillis",
          "abilityCasts"
        ]
      },
      "val-match-v1.AbilityCastsDto": {
        "type": "object",
        "title": "AbilityCastsDto",
        "properties": {
          "grenadeCasts": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "ability1Casts": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "ability2Casts": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "ultimateCasts": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "grenadeCasts",
          "ability1Casts",
          "ability2Casts",
          "ultimateCasts"
        ]
      },
      "val-match-v1.CoachDto": {
        "type": "object",
        "title": "CoachDto",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string"
          },
          "teamId": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "puuid",
          "teamId"
        ]
      },
      "val-match-v1.TeamDto": {
        "type": "object",
        "title": "TeamDto",
        "properties": {
          "teamId": {
            "type": "string",
            "x-type": "string",
            "description": "This is an arbitrary string. Red and Blue in bomb modes. The puuid of the player in deathmatch."
          },
          "won": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "roundsPlayed": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "roundsWon": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "numPoints": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "description": "Team points scored. Number of kills in deathmatch."
          }
        },
        "required": [
          "teamId",
          "won",
          "roundsPlayed",
          "roundsWon",
          "numPoints"
        ]
      },
      "val-match-v1.RoundResultDto": {
        "type": "object",
        "title": "RoundResultDto",
        "properties": {
          "roundNum": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "roundResult": {
            "type": "string",
            "x-type": "string"
          },
          "roundCeremony": {
            "type": "string",
            "x-type": "string"
          },
          "winningTeam": {
            "type": "string",
            "x-type": "string"
          },
          "bombPlanter": {
            "type": "string",
            "x-type": "string",
            "description": "PUUID of player"
          },
          "bombDefuser": {
            "type": "string",
            "x-type": "string",
            "description": "PUUID of player"
          },
          "plantRoundTime": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "plantPlayerLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-match-v1.PlayerLocationsDto",
              "x-type": "PlayerLocationsDto"
            },
            "x-type": "List[PlayerLocationsDto]"
          },
          "plantLocation": {
            "$ref": "#/components/schemas/val-match-v1.LocationDto",
            "x-type": "LocationDto"
          },
          "plantSite": {
            "type": "string",
            "x-type": "string"
          },
          "defuseRoundTime": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "defusePlayerLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-match-v1.PlayerLocationsDto",
              "x-type": "PlayerLocationsDto"
            },
            "x-type": "List[PlayerLocationsDto]"
          },
          "defuseLocation": {
            "$ref": "#/components/schemas/val-match-v1.LocationDto",
            "x-type": "LocationDto"
          },
          "playerStats": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-match-v1.PlayerRoundStatsDto",
              "x-type": "PlayerRoundStatsDto"
            },
            "x-type": "List[PlayerRoundStatsDto]"
          },
          "roundResultCode": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "roundNum",
          "roundResult",
          "roundCeremony",
          "winningTeam",
          "bombPlanter",
          "bombDefuser",
          "plantRoundTime",
          "plantPlayerLocations",
          "plantLocation",
          "plantSite",
          "defuseRoundTime",
          "defusePlayerLocations",
          "defuseLocation",
          "playerStats",
          "roundResultCode"
        ]
      },
      "val-match-v1.PlayerLocationsDto": {
        "type": "object",
        "title": "PlayerLocationsDto",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string"
          },
          "viewRadians": {
            "type": "number",
            "format": "float",
            "x-type": "float"
          },
          "location": {
            "$ref": "#/components/schemas/val-match-v1.LocationDto",
            "x-type": "LocationDto"
          }
        },
        "required": [
          "puuid",
          "viewRadians",
          "location"
        ]
      },
      "val-match-v1.LocationDto": {
        "type": "object",
        "title": "LocationDto",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "y": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "x",
          "y"
        ]
      },
      "val-match-v1.PlayerRoundStatsDto": {
        "type": "object",
        "title": "PlayerRoundStatsDto",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string"
          },
          "kills": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-match-v1.KillDto",
              "x-type": "KillDto"
            },
            "x-type": "List[KillDto]"
          },
          "damage": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-match-v1.DamageDto",
              "x-type": "DamageDto"
            },
            "x-type": "List[DamageDto]"
          },
          "score": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "economy": {
            "$ref": "#/components/schemas/val-match-v1.EconomyDto",
            "x-type": "EconomyDto"
          },
          "ability": {
            "$ref": "#/components/schemas/val-match-v1.AbilityDto",
            "x-type": "AbilityDto"
          }
        },
        "required": [
          "puuid",
          "kills",
          "damage",
          "score",
          "economy",
          "ability"
        ]
      },
      "val-match-v1.KillDto": {
        "type": "object",
        "title": "KillDto",
        "properties": {
          "timeSinceGameStartMillis": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "timeSinceRoundStartMillis": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "killer": {
            "type": "string",
            "x-type": "string",
            "description": "PUUID"
          },
          "victim": {
            "type": "string",
            "x-type": "string",
            "description": "PUUID"
          },
          "victimLocation": {
            "$ref": "#/components/schemas/val-match-v1.LocationDto",
            "x-type": "LocationDto"
          },
          "assistants": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "List[string]",
            "description": "List of PUUIDs"
          },
          "playerLocations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-match-v1.PlayerLocationsDto",
              "x-type": "PlayerLocationsDto"
            },
            "x-type": "List[PlayerLocationsDto]"
          },
          "finishingDamage": {
            "$ref": "#/components/schemas/val-match-v1.FinishingDamageDto",
            "x-type": "FinishingDamageDto"
          }
        },
        "required": [
          "timeSinceGameStartMillis",
          "timeSinceRoundStartMillis",
          "killer",
          "victim",
          "victimLocation",
          "assistants",
          "playerLocations",
          "finishingDamage"
        ]
      },
      "val-match-v1.FinishingDamageDto": {
        "type": "object",
        "title": "FinishingDamageDto",
        "properties": {
          "damageType": {
            "type": "string",
            "x-type": "string"
          },
          "damageItem": {
            "type": "string",
            "x-type": "string"
          },
          "isSecondaryFireMode": {
            "type": "boolean",
            "x-type": "boolean"
          }
        },
        "required": [
          "damageType",
          "damageItem",
          "isSecondaryFireMode"
        ]
      },
      "val-match-v1.DamageDto": {
        "type": "object",
        "title": "DamageDto",
        "properties": {
          "receiver": {
            "type": "string",
            "x-type": "string",
            "description": "PUUID"
          },
          "damage": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "legshots": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "bodyshots": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "headshots": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "receiver",
          "damage",
          "legshots",
          "bodyshots",
          "headshots"
        ]
      },
      "val-match-v1.EconomyDto": {
        "type": "object",
        "title": "EconomyDto",
        "properties": {
          "loadoutValue": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "weapon": {
            "type": "string",
            "x-type": "string"
          },
          "armor": {
            "type": "string",
            "x-type": "string"
          },
          "remaining": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "spent": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          }
        },
        "required": [
          "loadoutValue",
          "weapon",
          "armor",
          "remaining",
          "spent"
        ]
      },
      "val-match-v1.AbilityDto": {
        "type": "object",
        "title": "AbilityDto",
        "properties": {
          "grenadeEffects": {
            "type": "string",
            "x-type": "string"
          },
          "ability1Effects": {
            "type": "string",
            "x-type": "string"
          },
          "ability2Effects": {
            "type": "string",
            "x-type": "string"
          },
          "ultimateEffects": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "grenadeEffects",
          "ability1Effects",
          "ability2Effects",
          "ultimateEffects"
        ]
      },
      "val-match-v1.MatchlistDto": {
        "type": "object",
        "title": "MatchlistDto",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string"
          },
          "history": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-match-v1.MatchlistEntryDto",
              "x-type": "MatchlistEntryDto"
            },
            "x-type": "List[MatchlistEntryDto]"
          }
        },
        "required": [
          "puuid",
          "history"
        ]
      },
      "val-match-v1.MatchlistEntryDto": {
        "type": "object",
        "title": "MatchlistEntryDto",
        "properties": {
          "matchId": {
            "type": "string",
            "x-type": "string"
          },
          "gameStartTimeMillis": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "queueId": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "matchId",
          "gameStartTimeMillis",
          "queueId"
        ]
      },
      "val-match-v1.RecentMatchesDto": {
        "type": "object",
        "title": "RecentMatchesDto",
        "properties": {
          "currentTime": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "matchIds": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string"
            },
            "x-type": "List[string]",
            "description": "A list of recent match ids."
          }
        },
        "required": [
          "currentTime",
          "matchIds"
        ]
      },
      "val-ranked-v1.LeaderboardDto": {
        "type": "object",
        "title": "LeaderboardDto",
        "properties": {
          "shard": {
            "type": "string",
            "x-type": "string",
            "description": "The shard for the given leaderboard."
          },
          "actId": {
            "type": "string",
            "x-type": "string",
            "description": "The act id for the given leaderboard. Act ids can be found using the val-content API."
          },
          "totalPlayers": {
            "type": "integer",
            "format": "int64",
            "x-type": "long",
            "description": "The total number of players in the leaderboard."
          },
          "players": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-ranked-v1.PlayerDto",
              "x-type": "PlayerDto"
            },
            "x-type": "List[PlayerDto]"
          },
          "immortalStartingPage": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "immortalStartingIndex": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "topTierRRThreshold": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "tierDetails": {
            "type": "object",
            "x-key": {
              "type": "integer",
              "format": "int64",
              "x-type": "long"
            },
            "additionalProperties": {
              "$ref": "#/components/schemas/val-ranked-v1.TierDetailDto",
              "x-type": "TierDetailDto"
            },
            "x-type": "Map[long, TierDetailDto]"
          },
          "startIndex": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "query": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "shard",
          "actId",
          "totalPlayers",
          "players"
        ]
      },
      "val-ranked-v1.PlayerDto": {
        "type": "object",
        "title": "PlayerDto",
        "properties": {
          "puuid": {
            "type": "string",
            "x-type": "string",
            "description": "This field may be omitted if the player has been anonymized."
          },
          "gameName": {
            "type": "string",
            "x-type": "string",
            "description": "This field may be omitted if the player has been anonymized."
          },
          "tagLine": {
            "type": "string",
            "x-type": "string",
            "description": "This field may be omitted if the player has been anonymized."
          },
          "leaderboardRank": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "rankedRating": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "numberOfWins": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "competitiveTier": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          }
        },
        "required": [
          "leaderboardRank",
          "rankedRating",
          "numberOfWins"
        ]
      },
      "val-status-v1.PlatformDataDto": {
        "type": "object",
        "title": "PlatformDataDto",
        "properties": {
          "id": {
            "type": "string",
            "x-type": "string"
          },
          "name": {
            "type": "string",
            "x-type": "string"
          },
          "locales": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string",
              "x-enum": "locale"
            },
            "x-type": "List[string]"
          },
          "maintenances": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-status-v1.StatusDto",
              "x-type": "StatusDto"
            },
            "x-type": "List[StatusDto]"
          },
          "incidents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-status-v1.StatusDto",
              "x-type": "StatusDto"
            },
            "x-type": "List[StatusDto]"
          }
        },
        "required": [
          "id",
          "name",
          "locales",
          "maintenances",
          "incidents"
        ]
      },
      "val-status-v1.StatusDto": {
        "type": "object",
        "title": "StatusDto",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "maintenance_status": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "scheduled",
              "in_progress",
              "complete"
            ],
            "description": "(Legal values:  scheduled,  in_progress,  complete)"
          },
          "incident_severity": {
            "type": "string",
            "x-type": "string",
            "enum": [
              "info",
              "warning",
              "critical"
            ],
            "description": "(Legal values:  info,  warning,  critical)"
          },
          "titles": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-status-v1.ContentDto",
              "x-type": "ContentDto"
            },
            "x-type": "List[ContentDto]"
          },
          "updates": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-status-v1.UpdateDto",
              "x-type": "UpdateDto"
            },
            "x-type": "List[UpdateDto]"
          },
          "created_at": {
            "type": "string",
            "x-type": "string"
          },
          "archive_at": {
            "type": "string",
            "x-type": "string"
          },
          "updated_at": {
            "type": "string",
            "x-type": "string"
          },
          "platforms": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "windows",
                "macos",
                "android",
                "ios",
                "ps4",
                "xbone",
                "switch"
              ]
            },
            "x-type": "List[string]",
            "description": "(Legal values: windows, macos, android, ios, ps4, xbone, switch)"
          }
        },
        "required": [
          "id",
          "maintenance_status",
          "incident_severity",
          "titles",
          "updates",
          "created_at",
          "archive_at",
          "updated_at",
          "platforms"
        ]
      },
      "val-status-v1.ContentDto": {
        "type": "object",
        "title": "ContentDto",
        "properties": {
          "locale": {
            "type": "string",
            "x-type": "string",
            "x-enum": "locale"
          },
          "content": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "locale",
          "content"
        ]
      },
      "val-status-v1.UpdateDto": {
        "type": "object",
        "title": "UpdateDto",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "author": {
            "type": "string",
            "x-type": "string"
          },
          "publish": {
            "type": "boolean",
            "x-type": "boolean"
          },
          "publish_locations": {
            "type": "array",
            "items": {
              "type": "string",
              "x-type": "string",
              "enum": [
                "riotclient",
                "riotstatus",
                "game"
              ]
            },
            "x-type": "List[string]",
            "description": "(Legal values: riotclient, riotstatus, game)"
          },
          "translations": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/val-status-v1.ContentDto",
              "x-type": "ContentDto"
            },
            "x-type": "List[ContentDto]"
          },
          "created_at": {
            "type": "string",
            "x-type": "string"
          },
          "updated_at": {
            "type": "string",
            "x-type": "string"
          }
        },
        "required": [
          "id",
          "author",
          "publish",
          "publish_locations",
          "translations",
          "created_at",
          "updated_at"
        ]
      },
      "match-v5.ParticipantChallenges": {
        "type": "object",
        "title": "ParticipantChallenges",
        "properties": {
          "12AssistStreakCount": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "abilityUses": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "acesBefore15Minutes": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "alliedJungleMonsterKills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "baronBuffGoldAdvantageOverThreshold": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "baronTakedowns": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "blastConeOppositeOpponentCount": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "bountyGold": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "buffsStolen": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "completeSupportQuestInTime": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "controlWardsPlaced": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "controlWardTimeCoverageInRiverOrEnemyHalf": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "damagePerMinute": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "damageTakenOnTeamPercentage": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "dancedWithRiftHerald": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "deathsByEnemyChamps": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "dodgeSkillShotsSmallWindow": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "doubleAces": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "dragonTakedowns": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "earliestBaron": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "earliestDragonTakedown": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "earliestElderDragon": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "earlyLaningPhaseGoldExpAdvantage": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "effectiveHealAndShielding": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "elderDragonKillsWithOpposingSoul": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "elderDragonMultikills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "enemyChampionImmobilizations": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "enemyJungleMonsterKills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "epicMonsterKillsNearEnemyJungler": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "epicMonsterKillsWithin30SecondsOfSpawn": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "epicMonsterSteals": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "epicMonsterStolenWithoutSmite": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "fasterSupportQuestCompletion": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "fastestLegendary": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "firstTurretKilled": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "firstTurretKilledTime": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "flawlessAces": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "fullTeamTakedown": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "gameLength": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "getTakedownsInAllLanesEarlyJungleAsLaner": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "goldPerMinute": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "hadAfkTeammate": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "hadOpenNexus": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "highestChampionDamage": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "highestCrowdControlScore": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "highestWardKills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "immobilizeAndKillWithAlly": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "initialBuffCount": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "initialCrabCount": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "jungleCsBefore10Minutes": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "junglerKillsEarlyJungle": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "junglerTakedownsNearDamagedEpicMonster": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "kda": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "killAfterHiddenWithAlly": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "killedChampTookFullTeamDamageSurvived": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "killingSprees": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "killParticipation": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "killsNearEnemyTurret": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "killsOnLanersEarlyJungleAsJungler": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "killsOnOtherLanesEarlyJungleAsLaner": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "killsOnRecentlyHealedByAramPack": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "killsUnderOwnTurret": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "killsWithHelpFromEpicMonster": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "knockEnemyIntoTeamAndKill": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "kTurretsDestroyedBeforePlatesFall": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "landSkillShotsEarlyGame": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "laneMinionsFirst10Minutes": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "laningPhaseGoldExpAdvantage": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "legendaryCount": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "lostAnInhibitor": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "maxCsAdvantageOnLaneOpponent": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "maxKillDeficit": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "maxLevelLeadLaneOpponent": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "mejaisFullStackInTime": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "moreEnemyJungleThanOpponent": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "mostWardsDestroyedOneSweeper": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "multiKillOneSpell": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "multikills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "multikillsAfterAggressiveFlash": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "multiTurretRiftHeraldCount": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "mythicItemUsed": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "outerTurretExecutesBefore10Minutes": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "outnumberedKills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "outnumberedNexusKill": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "perfectDragonSoulsTaken": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "perfectGame": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "pickKillWithAlly": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "playedChampSelectPosition": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "poroExplosions": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "quickCleanse": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "quickFirstTurret": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "quickSoloKills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "riftHeraldTakedowns": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "saveAllyFromDeath": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "scuttleCrabKills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "shortestTimeToAceFromFirstTakedown": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "skillshotsDodged": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "skillshotsHit": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "snowballsHit": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "soloBaronKills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "soloKills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "soloTurretsLategame": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "stealthWardsPlaced": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "survivedSingleDigitHpCount": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "survivedThreeImmobilizesInFight": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "takedownOnFirstTurret": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "takedowns": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "takedownsAfterGainingLevelAdvantage": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "takedownsBeforeJungleMinionSpawn": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "takedownsFirst25Minutes": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "takedownsFirstXMinutes": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "takedownsInAlcove": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "takedownsInEnemyFountain": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "teamBaronKills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "teamDamagePercentage": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "teamElderDragonKills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "teamRiftHeraldKills": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "teleportTakedowns": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "thirdInhibitorDestroyedTime": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "threeWardsOneSweeperCount": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "tookLargeDamageSurvived": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "turretPlatesTaken": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "turretsTakenWithRiftHerald": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "turretTakedowns": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "twentyMinionsIn3SecondsCount": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "twoWardsOneSweeperCount": {
            "type": "integer",
            "format": "int32",
            "x-type": "int"
          },
          "unseenRecalls": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "visionScoreAdvantageLaneOpponent": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "visionScorePerMinute": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "wardsGuarded": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "wardTakedowns": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "wardTakedownsBefore20M": {
            "type": "number",
            "format": "double",
            "x-type": "double"
          },
          "legendaryItemUsed": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32",
              "x-type": "int"
            },
            "x-type": "List[int]"
          }
        }
      },
      "match-v5.ParticipantMissions": {
        "type": "object",
        "title": "ParticipantMissions",
        "properties": {
          "PlayerScore0": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore0"
          },
          "PlayerScore1": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore1"
          },
          "PlayerScore10": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore10"
          },
          "PlayerScore11": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore11"
          },
          "PlayerScore2": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore2"
          },
          "PlayerScore3": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore3"
          },
          "PlayerScore4": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore4"
          },
          "PlayerScore5": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore5"
          },
          "PlayerScore6": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore6"
          },
          "PlayerScore7": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore7"
          },
          "PlayerScore8": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore8"
          },
          "PlayerScore9": {
            "type": "integer",
            "format": "int32",
            "x-type": "int",
            "x-alias": "playerScore9"
          }
        },
        "required": [
          "PlayerScore0",
          "PlayerScore1",
          "PlayerScore10",
          "PlayerScore11",
          "PlayerScore2",
          "PlayerScore3",
          "PlayerScore4",
          "PlayerScore5",
          "PlayerScore6",
          "PlayerScore7",
          "PlayerScore8",
          "PlayerScore9"
        ]
      },
      "match-v5.MatchTimelineInfoFrameEvent": {
        "title": "MatchTimelineInfoFrameEvent",
        "type": "object",
        "properties": {
          "realTimestamp": {
            "type": "integer",
            "format": "int64"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string",
            "enum": [
              "ASCENDED_EVENT",
              "BUILDING_KILL",
              "CAPTURE_POINT",
              "CHAMPION_KILL",
              "CHAMPION_SPECIAL_KILL",
              "CHAMPION_TRANSFORM",
              "DRAGON_SOUL_GIVEN",
              "ELITE_MONSTER_KILL",
              "GAME_END",
              "ITEM_DESTROYED",
              "ITEM_PURCHASED",
              "ITEM_SOLD",
              "ITEM_UNDO",
              "LEVEL_UP",
              "OBJECTIVE_BOUNTY_FINISH",
              "OBJECTIVE_BOUNTY_PRESTART",
              "PAUSE_END",
              "PAUSE_START",
              "SKILL_LEVEL_UP",
              "TURRET_PLATE_DESTROYED",
              "WARD_KILL",
              "WARD_PLACED"
            ],
            "description": "Timeline event type.\n(Known legal values: ASCENDED_EVENT, BUILDING_KILL, CAPTURE_POINT, CHAMPION_KILL, CHAMPION_SPECIAL_KILL, CHAMPION_TRANSFORM, DRAGON_SOUL_GIVEN, ELITE_MONSTER_KILL, GAME_END, ITEM_DESTROYED, ITEM_PURCHASED, ITEM_SOLD, ITEM_UNDO, LEVEL_UP, OBJECTIVE_BOUNTY_FINISH, OBJECTIVE_BOUNTY_PRESTART, PAUSE_END, PAUSE_START, SKILL_LEVEL_UP, TURRET_PLATE_DESTROYED, WARD_KILL, WARD_PLACED)"
          },
          "itemId": {
            "type": "integer",
            "format": "int32"
          },
          "participantId": {
            "type": "integer",
            "format": "int32"
          },
          "levelUpType": {
            "type": "string"
          },
          "skillSlot": {
            "type": "integer",
            "format": "int32"
          },
          "creatorId": {
            "type": "integer",
            "format": "int32"
          },
          "wardType": {
            "type": "string"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "assistingParticipantIds": {
            "type": "array",
            "items": {
              "type": "integer",
              "format": "int32"
            }
          },
          "bounty": {
            "type": "integer",
            "format": "int32"
          },
          "killStreakLength": {
            "type": "integer",
            "format": "int32"
          },
          "killerId": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "$ref": "#/components/schemas/match-v5.MatchTimelinePosition"
          },
          "victimDamageDealt": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameEventVictimDamageDealt"
            }
          },
          "victimDamageReceived": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameEventVictimDamageDealt"
            }
          },
          "victimId": {
            "type": "integer",
            "format": "int32"
          },
          "killType": {
            "type": "string"
          },
          "laneType": {
            "type": "string"
          },
          "teamId": {
            "type": "integer",
            "format": "int32",
            "x-enum": "team"
          },
          "multiKillLength": {
            "type": "integer",
            "format": "int32"
          },
          "killerTeamId": {
            "type": "integer",
            "format": "int32",
            "x-enum": "team"
          },
          "monsterType": {
            "type": "string"
          },
          "monsterSubType": {
            "type": "string"
          },
          "buildingType": {
            "type": "string"
          },
          "towerType": {
            "type": "string"
          },
          "afterId": {
            "type": "integer",
            "format": "int32"
          },
          "beforeId": {
            "type": "integer",
            "format": "int32"
          },
          "goldGain": {
            "type": "integer",
            "format": "int32"
          },
          "gameId": {
            "type": "integer",
            "format": "int64"
          },
          "winningTeam": {
            "type": "integer",
            "format": "int32"
          },
          "transformType": {
            "type": "string"
          },
          "name": {
            "type": "string"
          },
          "shutdownBounty": {
            "type": "integer",
            "format": "int32"
          },
          "actualStartTime": {
            "type": "integer",
            "format": "int64"
          }
        },
        "required": [
          "timestamp",
          "type"
        ]
      },
      "match-v5.MatchTimelineInfoFrameParticipantFrameChampionStats": {
        "title": "MatchTimelineInfoFrameParticipantFrameChampionStats",
        "type": "object",
        "properties": {
          "abilityHaste": {
            "type": "integer",
            "format": "int32"
          },
          "abilityPower": {
            "type": "integer",
            "format": "int32"
          },
          "armor": {
            "type": "integer",
            "format": "int32"
          },
          "armorPen": {
            "type": "integer",
            "format": "int32"
          },
          "armorPenPercent": {
            "type": "integer",
            "format": "int32"
          },
          "attackDamage": {
            "type": "integer",
            "format": "int32"
          },
          "attackSpeed": {
            "type": "integer",
            "format": "int32"
          },
          "bonusArmorPenPercent": {
            "type": "integer",
            "format": "int32"
          },
          "bonusMagicPenPercent": {
            "type": "integer",
            "format": "int32"
          },
          "ccReduction": {
            "type": "integer",
            "format": "int32"
          },
          "cooldownReduction": {
            "type": "integer",
            "format": "int32"
          },
          "health": {
            "type": "integer",
            "format": "int32"
          },
          "healthMax": {
            "type": "integer",
            "format": "int32"
          },
          "healthRegen": {
            "type": "integer",
            "format": "int32"
          },
          "lifesteal": {
            "type": "integer",
            "format": "int32"
          },
          "magicPen": {
            "type": "integer",
            "format": "int32"
          },
          "magicPenPercent": {
            "type": "integer",
            "format": "int32"
          },
          "magicResist": {
            "type": "integer",
            "format": "int32"
          },
          "movementSpeed": {
            "type": "integer",
            "format": "int32"
          },
          "omnivamp": {
            "type": "integer",
            "format": "int32"
          },
          "physicalVamp": {
            "type": "integer",
            "format": "int32"
          },
          "power": {
            "type": "integer",
            "format": "int32"
          },
          "powerMax": {
            "type": "integer",
            "format": "int32"
          },
          "powerRegen": {
            "type": "integer",
            "format": "int32"
          },
          "spellVamp": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "abilityPower",
          "armor",
          "armorPen",
          "armorPenPercent",
          "attackDamage",
          "attackSpeed",
          "bonusArmorPenPercent",
          "bonusMagicPenPercent",
          "ccReduction",
          "cooldownReduction",
          "health",
          "healthMax",
          "healthRegen",
          "lifesteal",
          "magicPen",
          "magicPenPercent",
          "magicResist",
          "movementSpeed",
          "power",
          "powerMax",
          "powerRegen",
          "spellVamp"
        ]
      },
      "match-v5.MatchTimelineInfoFrameParticipantFrameDamageStats": {
        "title": "MatchTimelineInfoFrameParticipantFrameDamageStats",
        "type": "object",
        "properties": {
          "magicDamageDone": {
            "type": "integer",
            "format": "int32"
          },
          "magicDamageDoneToChampions": {
            "type": "integer",
            "format": "int32"
          },
          "magicDamageTaken": {
            "type": "integer",
            "format": "int32"
          },
          "physicalDamageDone": {
            "type": "integer",
            "format": "int32"
          },
          "physicalDamageDoneToChampions": {
            "type": "integer",
            "format": "int32"
          },
          "physicalDamageTaken": {
            "type": "integer",
            "format": "int32"
          },
          "totalDamageDone": {
            "type": "integer",
            "format": "int32"
          },
          "totalDamageDoneToChampions": {
            "type": "integer",
            "format": "int32"
          },
          "totalDamageTaken": {
            "type": "integer",
            "format": "int32"
          },
          "trueDamageDone": {
            "type": "integer",
            "format": "int32"
          },
          "trueDamageDoneToChampions": {
            "type": "integer",
            "format": "int32"
          },
          "trueDamageTaken": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "magicDamageDone",
          "magicDamageDoneToChampions",
          "magicDamageTaken",
          "physicalDamageDone",
          "physicalDamageDoneToChampions",
          "physicalDamageTaken",
          "totalDamageDone",
          "totalDamageDoneToChampions",
          "totalDamageTaken",
          "trueDamageDone",
          "trueDamageDoneToChampions",
          "trueDamageTaken"
        ]
      },
      "match-v5.MatchTimelinePosition": {
        "title": "MatchTimelinePosition",
        "type": "object",
        "properties": {
          "x": {
            "type": "integer",
            "format": "int32"
          },
          "y": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "x",
          "y"
        ]
      },
      "match-v5.MatchTimelineInfoFrameParticipantFrame": {
        "title": "MatchTimelineInfoFrameParticipantFrame",
        "type": "object",
        "properties": {
          "championStats": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrameChampionStats"
          },
          "currentGold": {
            "type": "integer",
            "format": "int32"
          },
          "damageStats": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrameDamageStats"
          },
          "goldPerSecond": {
            "type": "integer",
            "format": "int32"
          },
          "jungleMinionsKilled": {
            "type": "integer",
            "format": "int32"
          },
          "level": {
            "type": "integer",
            "format": "int32"
          },
          "minionsKilled": {
            "type": "integer",
            "format": "int32"
          },
          "participantId": {
            "type": "integer",
            "format": "int32"
          },
          "position": {
            "$ref": "#/components/schemas/match-v5.MatchTimelinePosition"
          },
          "timeEnemySpentControlled": {
            "type": "integer",
            "format": "int32"
          },
          "totalGold": {
            "type": "integer",
            "format": "int32"
          },
          "xp": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "championStats",
          "currentGold",
          "damageStats",
          "goldPerSecond",
          "jungleMinionsKilled",
          "level",
          "minionsKilled",
          "participantId",
          "position",
          "timeEnemySpentControlled",
          "totalGold",
          "xp"
        ]
      },
      "match-v5.MatchTimelineInfoFrameParticipantFrames": {
        "title": "MatchTimelineInfoFrameParticipantFrames",
        "type": "object",
        "properties": {
          "1": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrame"
          },
          "2": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrame"
          },
          "3": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrame"
          },
          "4": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrame"
          },
          "5": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrame"
          },
          "6": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrame"
          },
          "7": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrame"
          },
          "8": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrame"
          },
          "9": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrame",
            "description": "Possibly null for the Arena 2v2v2v2 (`CHERRY`) game mode."
          },
          "10": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrame",
            "description": "Possibly null for the Arena 2v2v2v2 (`CHERRY`) game mode."
          }
        },
        "required": [
          "1",
          "2",
          "3",
          "4",
          "5",
          "6",
          "7",
          "8"
        ]
      },
      "match-v5.MatchTimelineInfoFrame": {
        "title": "MatchTimelineInfoFrame",
        "type": "object",
        "properties": {
          "events": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameEvent"
            }
          },
          "participantFrames": {
            "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrameParticipantFrames"
          },
          "timestamp": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "events",
          "timestamp"
        ]
      },
      "match-v5.MatchTimelineInfoFrameEventVictimDamageDealt": {
        "title": "MatchTimelineInfoFrameEventVictimDamageReceived",
        "type": "object",
        "properties": {
          "basic": {
            "type": "boolean"
          },
          "magicDamage": {
            "type": "integer",
            "format": "int32"
          },
          "name": {
            "type": "string"
          },
          "participantId": {
            "type": "integer",
            "format": "int32"
          },
          "physicalDamage": {
            "type": "integer",
            "format": "int32"
          },
          "spellName": {
            "type": "string"
          },
          "spellSlot": {
            "type": "integer",
            "format": "int32"
          },
          "trueDamage": {
            "type": "integer",
            "format": "int32"
          },
          "type": {
            "type": "string"
          }
        },
        "required": [
          "basic",
          "magicDamage",
          "name",
          "participantId",
          "physicalDamage",
          "spellName",
          "spellSlot",
          "trueDamage",
          "type"
        ]
      },
      "match-v5.MatchTimelineInfoParticipant": {
        "title": "MatchTimelineInfoParticipant",
        "type": "object",
        "properties": {
          "participantId": {
            "type": "integer",
            "format": "int32"
          },
          "puuid": {
            "type": "string"
          }
        },
        "required": [
          "participantId",
          "puuid"
        ]
      },
      "match-v5.MatchTimelineInfo": {
        "title": "MatchTimelineInfo",
        "type": "object",
        "properties": {
          "frameInterval": {
            "type": "integer",
            "format": "int32"
          },
          "frames": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/match-v5.MatchTimelineInfoFrame"
            }
          },
          "gameId": {
            "type": "integer",
            "format": "int64"
          },
          "participants": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/match-v5.MatchTimelineInfoParticipant"
            }
          },
          "endOfGameResult": {
            "type": "string"
          }
        },
        "required": [
          "frameInterval",
          "frames"
        ]
      },
      "val-ranked-v1.TierDetailDto": {
        "type": "object",
        "title": "TierDetailDto",
        "properties": {
          "rankedRatingThreshold": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "startingPage": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          },
          "startingIndex": {
            "type": "integer",
            "format": "int64",
            "x-type": "long"
          }
        },
        "required": [
          "rankedRatingThreshold",
          "startingPage",
          "startingIndex"
        ]
      },
      "tft-match-v1.ParticipantMissionsDto": {
        "type": "object",
        "title": "ParticipantMissionsDto",
        "properties": {
          "Assists": {
            "type": "integer",
            "format": "int32"
          },
          "DamageDealt": {
            "type": "integer",
            "format": "int32"
          },
          "DamageDealtToObjectives": {
            "type": "integer",
            "format": "int32"
          },
          "DamageDealtToTurrets": {
            "type": "integer",
            "format": "int32"
          },
          "DamageTaken": {
            "type": "integer",
            "format": "int32"
          },
          "DoubleKills": {
            "type": "integer",
            "format": "int32"
          },
          "GoldEarned": {
            "type": "integer",
            "format": "int32"
          },
          "GoldSpent": {
            "type": "integer",
            "format": "int32"
          },
          "InhibitorsDestroyed": {
            "type": "integer",
            "format": "int32"
          },
          "Kills": {
            "type": "integer",
            "format": "int32"
          },
          "LargestKillingSpree": {
            "type": "integer",
            "format": "int32"
          },
          "LargestMultiKill": {
            "type": "integer",
            "format": "int32"
          },
          "MagicDamageDealt": {
            "type": "integer",
            "format": "int32"
          },
          "MagicDamageDealtToChampions": {
            "type": "integer",
            "format": "int32"
          },
          "NeutralMinionsKilledTeamJungle": {
            "type": "integer",
            "format": "int32"
          },
          "PhysicalDamageDealt": {
            "type": "integer",
            "format": "int32"
          },
          "PhysicalDamageTaken": {
            "type": "integer",
            "format": "int32"
          },
          "PlayerScore0": {
            "type": "integer",
            "format": "int32"
          },
          "PlayerScore1": {
            "type": "integer",
            "format": "int32"
          },
          "PlayerScore2": {
            "type": "integer",
            "format": "int32"
          },
          "PlayerScore3": {
            "type": "integer",
            "format": "int32"
          },
          "PlayerScore4": {
            "type": "integer",
            "format": "int32"
          },
          "PlayerScore5": {
            "type": "integer",
            "format": "int32"
          },
          "PlayerScore6": {
            "type": "integer",
            "format": "int32"
          },
          "PlayerScore9": {
            "type": "integer",
            "format": "int32"
          },
          "PlayerScore10": {
            "type": "integer",
            "format": "int32"
          },
          "PlayerScore11": {
            "type": "integer",
            "format": "int32"
          },
          "QuadraKills": {
            "type": "integer",
            "format": "int32"
          },
          "Spell1Casts": {
            "type": "integer",
            "format": "int32"
          },
          "Spell2Casts": {
            "type": "integer",
            "format": "int32"
          },
          "Spell3Casts": {
            "type": "integer",
            "format": "int32"
          },
          "Spell4Casts": {
            "type": "integer",
            "format": "int32"
          },
          "SummonerSpell1Casts": {
            "type": "integer",
            "format": "int32"
          },
          "TimeCCOthers": {
            "type": "integer",
            "format": "int32"
          },
          "TotalMinionsKilled": {
            "type": "integer",
            "format": "int32"
          },
          "TrueDamageDealtToChampions": {
            "type": "integer",
            "format": "int32"
          },
          "UnrealKills": {
            "type": "integer",
            "format": "int32"
          },
          "VisionScore": {
            "type": "integer",
            "format": "int32"
          },
          "WardsKilled": {
            "type": "integer",
            "format": "int32"
          },
          "Deaths": {
            "type": "integer",
            "format": "int32"
          },
          "KillingSprees": {
            "type": "integer",
            "format": "int32"
          },
          "MagicDamageTaken": {
            "type": "integer",
            "format": "int32"
          },
          "PentaKills": {
            "type": "integer",
            "format": "int32"
          },
          "PhysicalDamageDealtToChampions": {
            "type": "integer",
            "format": "int32"
          },
          "TotalDamageDealtToChampions": {
            "type": "integer",
            "format": "int32"
          },
          "TripleKills": {
            "type": "integer",
            "format": "int32"
          },
          "TrueDamageDealt": {
            "type": "integer",
            "format": "int32"
          },
          "TrueDamageTaken": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "Assists",
          "DamageDealt",
          "DamageDealtToObjectives",
          "DamageDealtToTurrets",
          "DamageTaken",
          "DoubleKills",
          "GoldEarned",
          "GoldSpent",
          "InhibitorsDestroyed",
          "Kills",
          "LargestKillingSpree",
          "LargestMultiKill",
          "MagicDamageDealt",
          "MagicDamageDealtToChampions",
          "NeutralMinionsKilledTeamJungle",
          "PhysicalDamageDealt",
          "PhysicalDamageTaken",
          "PlayerScore0",
          "PlayerScore1",
          "PlayerScore10",
          "PlayerScore11",
          "PlayerScore2",
          "PlayerScore3",
          "PlayerScore4",
          "PlayerScore5",
          "PlayerScore6",
          "PlayerScore9",
          "QuadraKills",
          "Spell1Casts",
          "Spell2Casts",
          "Spell3Casts",
          "Spell4Casts",
          "SummonerSpell1Casts",
          "TimeCCOthers",
          "TotalMinionsKilled",
          "TrueDamageDealtToChampions",
          "UnrealKills",
          "VisionScore",
          "WardsKilled"
        ]
      }
    },
    "securitySchemes": {
      "api_key": {
        "type": "apiKey",
        "description": "API key in query param.",
        "name": "api_key",
        "in": "query"
      },
      "X-Riot-Token": {
        "type": "apiKey",
        "description": "API key in header.",
        "name": "X-Riot-Token",
        "in": "header"
      }
    }
  },
  "security": [
    {
      "api_key": []
    },
    {
      "X-Riot-Token": []
    }
  ]
}